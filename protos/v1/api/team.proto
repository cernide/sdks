/**
 * Copyright 2018-2021 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/timestamp.proto";

import "v1/api/base.proto";

option go_package = "v1/api";

// Team specification
message Team {
    // Uuid
    string uuid = 1;

    // Name
    string name = 2;

    // projects
    repeated string projects = 3;

    // hubs
    repeated string component_hubs = 4;

    // registries
    repeated string model_registries = 5;

    // settings
    TeamSettings settings = 6;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 7;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 8;

}

 // Request data to update teams
 message TeamBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Team body
    Team team = 2;
 }


// Contains list teams
message ListTeamsResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Team results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

// Team member specification
message TeamMember {
    // User
    string user = 1;

    // User email
    string user_email = 2;

    // Role
    string role = 3;

    // Organization Role
    string org_role = 4;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 5;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 6;

}

// Request data to create/update organization members
message TeamMemberBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Team
    string team = 2;

    // Team body
    TeamMember member = 3;
 }

// Contains list organization members
message ListTeamMembersResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated TeamMember results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

// Run Settings specification
message TeamSettings {
  // Projects
  repeated SettingsCatalog projects = 1;

  // Component hubs
  repeated SettingsCatalog hubs = 2;

  // Model registries
  repeated SettingsCatalog registries = 3;
}
