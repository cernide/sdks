syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "v1/api";

// Organization specification
message Organization {
    // User
    string user = 1;

    // Read-only User email
    string user_email = 2;

    // Name
    string name = 3;

    // Optional flag to tell if this organization is public
    bool is_public = 4;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 5;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 6;

    // Optional time to revoke support access
    google.protobuf.Timestamp support_revoke_at = 7;

    // Optional expiration for support
    int32 expiration = 8;

    // Current user's role in this org
    string role = 9;

    // Default queue
    string queue = 10;

    // Default preset
    string preset = 11;

    // Setting to enable viewable metadata on cloud
    bool is_cloud_viewable = 12;

    // Setting to configure default archived deletion interval
    int32 archived_deletion_interval = 13;

    // Auth Settings
    google.protobuf.Struct auth = 14;

    // Plan settings
    google.protobuf.Struct plan = 15;

    // Usage info
    google.protobuf.Struct usage = 16;
}

 // Request data to update organizations
 message OrganizationBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Organization body
    Organization organization = 2;
 }


// Contains list of organizations
message ListOrganizationsResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Organization results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

// Organization member specification
message OrganizationMember {
    // User
    string user = 1;

    // Read-only User email
    string user_email = 2;

    // Role
    string role = 4;

    // Kind
    string kind = 5;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 6;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 7;

}

// Request data to create/update organization members
message OrganizationMemberBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Organization body
    OrganizationMember member = 2;

    // Optional email
    string email = 3;
 }

// Contains list of organization members
message ListOrganizationMembersResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated OrganizationMember results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

// Organization restrictions templates
message OrganizationRestrictionsTemplates {
  // UUID
  string uuid = 1;

  // Owner/namespace where the project was created
  string owner = 2;

  // Required name
  string name = 3;

  // Optional description
  string description = 4;

  // Optional tags of this entity
  repeated string tags = 5;

  // Optional time when the entity was created
  google.protobuf.Timestamp created_at = 6;

  // Optional last time the entity was updated
  google.protobuf.Timestamp updated_at = 7;

  // Optional project excluded features
  repeated string excluded_features = 8;

  // Optional project excluded runtimes
  repeated string excluded_runtimes = 9;

  // Optional project archived deletion interval
  int32 archived_deletion_interval = 10;

  // Authorized connections
  repeated string connections = 11;

  // Default Preset
  string preset = 12;

  // Authorized Presets
  repeated string presets = 13;

  // Default Queue
  string queue = 14;

  // Authorized queues
  repeated string queues = 15;

  // Authorized agents
  repeated string agents = 16;

  // Authorized namespaces
  repeated string namespaces = 17;

  // Authorized teams
  repeated string teams = 18;

  // Authorized projects
  repeated string projects = 19;

  // Linked projects
  repeated string projects_settings = 20;
}
