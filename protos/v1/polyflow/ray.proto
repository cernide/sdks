syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";

import "v1/polyflow/environment.proto";
import "v1/polyflow/init.proto";
import "v1/polyflow/k8s.proto";

option go_package = "v1/polyflow";

// Ray replica definition
message RayReplica {
  // Number of replicas
  int32 replicas = 1;

  int32 minReplicas = 2;

  int32 maxReplicas = 3;

  string groupName = 4;

  map<string, string> rayStartParams = 5;

  // Optional environment section
  Environment environment = 6;

  // Optional connections section
  repeated string connections = 7;

  // Volumes is a list of volumes that can be mounted.
  repeated Volume volumes = 8;

  // Optional init connections section
  repeated Init init = 9;

  // Optional sidecars section
  repeated Container sidecars = 10;

  // Optional container to run
  Container container = 11;
}

// Ray specification
message RayJob {
    // Kind of runtime, should be equal to "ray"
    string kind = 1;

    // Entrypoint of the ray application, e.g. python path/to/run.py
    string entrypoint = 2;

    // Optional run environment section to install pip packages or expose env vars
    google.protobuf.Struct runtimeEnv = 3;

    // Optional metadata section
    map<string, string> metadata = 4;

    // Cluster ray version, must be equal to the ray image version
    string version = 5;

    // Ray head goupr section
    RayReplica head = 6;

    // Ray worker group section
    RayReplica worker = 7;
}
