/**
 * Copyright 2018-2023 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "v1/polyflow/k8s.proto";

option go_package = "v1/polyflow";

// Environment specification
message Environment {
    // Optional Metadata labels to pass to k8s
    map<string, string> labels = 1;

    // Optional Metadata annotations to pass to k8s
    map<string, string> annotations = 2;

    // Optional NodeSelector is a selector which must be true for the pod to fit on a node.
    // Selector which must match a node's labels for the pod to be scheduled on that node.
    // More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    map<string, string> nodeSelector = 3;

    // Optional Affinity sets the scheduling constraints.
    Affinity affinity = 4;

    // Optional Tolerations to apply.
    repeated Toleration tolerations = 5;

    // Optional NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
    // the scheduler simply schedules this pod onto that node, assuming that it fits resource
    // requirements.
    string nodeName = 6;

    // Optional service account name to use for this run
    string serviceAccountName = 7;

    // Optional HostAliases is an optional list of hosts and IPs that will be injected into the pod spec.
    repeated HostAlias hostAliases = 8;

    // PodSecurityContext holds pod-level security attributes and common container settings.
    // Some fields are also present in container.securityContext.  Field values of
    // container.securityContext take precedence over field values of PodSecurityContext.
    PodSecurityContext securityContext = 9;

    // Optional image pull secrets to use for this run
    // ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
    // in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets
    // can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.
    // More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    repeated string imagePullSecrets = 10;

    // Host networking requested for this workflow pod. Default to false.
    bool hostNetwork = 11;

    // Use the host's pid namespace. Default to false.
    string hostPID = 12;

    // Set DNS policy for the pod.
    // Defaults to "ClusterFirst".
    // Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
    // DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
    // To have DNS options set along with hostNetwork, you have to specify DNS policy
    // explicitly to 'ClusterFirstWithHostNet'.
    string dnsPolicy = 13;

    // PodDNSConfig defines the DNS parameters of a pod in addition to
    // those generated from DNSPolicy.
    PodDNSConfig dnsConfig = 14;

    // If specified, the pod will be dispatched by specified scheduler.
    // Or it will be dispatched by workflow scope scheduler if specified.
    // If neither specified, the pod will be dispatched by default scheduler.
    // +optional
    string schedulerName = 15;

    // If specified, indicates the pod's priority. "system-node-critical" and
    // "system-cluster-critical" are two special keywords which indicate the
    // highest priorities with the former being the highest priority. Any other
    // name must be defined by creating a PriorityClass object with that name.
    // If not specified, the pod priority will be default or zero if there is no
    // default.
     string priorityClassName = 16;

     // The priority value. Various system components use this field to find the
     // priority of the pod. When Priority Admission Controller is enabled, it
     // prevents users from setting this field. The admission controller populates
     // this field from PriorityClassName.
     // The higher the value, the higher the priority.
     int32 priority = 17;

     // A valid restart policy
    string restartPolicy = 18;
}
