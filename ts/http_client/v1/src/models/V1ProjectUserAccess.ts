// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* tslint:disable */
/* eslint-disable */
/**
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * The version of the OpenAPI document: 2.0.0-rc8
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface V1ProjectUserAccess
 */
export interface V1ProjectUserAccess {
    /**
     *
     * @type {string}
     * @memberof V1ProjectUserAccess
     */
    user?: string;
    /**
     *
     * @type {string}
     * @memberof V1ProjectUserAccess
     */
    queue?: string;
    /**
     *
     * @type {string}
     * @memberof V1ProjectUserAccess
     */
    preset?: string;
}

/**
 * Check if a given object implements the V1ProjectUserAccess interface.
 */
export function instanceOfV1ProjectUserAccess(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1ProjectUserAccessFromJSON(json: any): V1ProjectUserAccess {
    return V1ProjectUserAccessFromJSONTyped(json, false);
}

export function V1ProjectUserAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ProjectUserAccess {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'user': !exists(json, 'user') ? undefined : json['user'],
        'queue': !exists(json, 'queue') ? undefined : json['queue'],
        'preset': !exists(json, 'preset') ? undefined : json['preset'],
    };
}

export function V1ProjectUserAccessToJSON(value?: V1ProjectUserAccess | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'user': value.user,
        'queue': value.queue,
        'preset': value.preset,
    };
}

