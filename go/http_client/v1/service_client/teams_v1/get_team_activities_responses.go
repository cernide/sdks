// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/v2/go/http_client/v1/service_model"
)

// GetTeamActivitiesReader is a Reader for the GetTeamActivities structure.
type GetTeamActivitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamActivitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamActivitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetTeamActivitiesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetTeamActivitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTeamActivitiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetTeamActivitiesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTeamActivitiesOK creates a GetTeamActivitiesOK with default headers values
func NewGetTeamActivitiesOK() *GetTeamActivitiesOK {
	return &GetTeamActivitiesOK{}
}

/*
GetTeamActivitiesOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetTeamActivitiesOK struct {
	Payload *service_model.V1ListActivitiesResponse
}

// IsSuccess returns true when this get team activities o k response has a 2xx status code
func (o *GetTeamActivitiesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team activities o k response has a 3xx status code
func (o *GetTeamActivitiesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team activities o k response has a 4xx status code
func (o *GetTeamActivitiesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team activities o k response has a 5xx status code
func (o *GetTeamActivitiesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get team activities o k response a status code equal to that given
func (o *GetTeamActivitiesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get team activities o k response
func (o *GetTeamActivitiesOK) Code() int {
	return 200
}

func (o *GetTeamActivitiesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesOK  %+v", 200, o.Payload)
}

func (o *GetTeamActivitiesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesOK  %+v", 200, o.Payload)
}

func (o *GetTeamActivitiesOK) GetPayload() *service_model.V1ListActivitiesResponse {
	return o.Payload
}

func (o *GetTeamActivitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListActivitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamActivitiesNoContent creates a GetTeamActivitiesNoContent with default headers values
func NewGetTeamActivitiesNoContent() *GetTeamActivitiesNoContent {
	return &GetTeamActivitiesNoContent{}
}

/*
GetTeamActivitiesNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetTeamActivitiesNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get team activities no content response has a 2xx status code
func (o *GetTeamActivitiesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team activities no content response has a 3xx status code
func (o *GetTeamActivitiesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team activities no content response has a 4xx status code
func (o *GetTeamActivitiesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team activities no content response has a 5xx status code
func (o *GetTeamActivitiesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get team activities no content response a status code equal to that given
func (o *GetTeamActivitiesNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get team activities no content response
func (o *GetTeamActivitiesNoContent) Code() int {
	return 204
}

func (o *GetTeamActivitiesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesNoContent  %+v", 204, o.Payload)
}

func (o *GetTeamActivitiesNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesNoContent  %+v", 204, o.Payload)
}

func (o *GetTeamActivitiesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamActivitiesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamActivitiesForbidden creates a GetTeamActivitiesForbidden with default headers values
func NewGetTeamActivitiesForbidden() *GetTeamActivitiesForbidden {
	return &GetTeamActivitiesForbidden{}
}

/*
GetTeamActivitiesForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetTeamActivitiesForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get team activities forbidden response has a 2xx status code
func (o *GetTeamActivitiesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team activities forbidden response has a 3xx status code
func (o *GetTeamActivitiesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team activities forbidden response has a 4xx status code
func (o *GetTeamActivitiesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team activities forbidden response has a 5xx status code
func (o *GetTeamActivitiesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get team activities forbidden response a status code equal to that given
func (o *GetTeamActivitiesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get team activities forbidden response
func (o *GetTeamActivitiesForbidden) Code() int {
	return 403
}

func (o *GetTeamActivitiesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamActivitiesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamActivitiesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamActivitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamActivitiesNotFound creates a GetTeamActivitiesNotFound with default headers values
func NewGetTeamActivitiesNotFound() *GetTeamActivitiesNotFound {
	return &GetTeamActivitiesNotFound{}
}

/*
GetTeamActivitiesNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetTeamActivitiesNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get team activities not found response has a 2xx status code
func (o *GetTeamActivitiesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team activities not found response has a 3xx status code
func (o *GetTeamActivitiesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team activities not found response has a 4xx status code
func (o *GetTeamActivitiesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team activities not found response has a 5xx status code
func (o *GetTeamActivitiesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get team activities not found response a status code equal to that given
func (o *GetTeamActivitiesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get team activities not found response
func (o *GetTeamActivitiesNotFound) Code() int {
	return 404
}

func (o *GetTeamActivitiesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamActivitiesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] getTeamActivitiesNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamActivitiesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamActivitiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamActivitiesDefault creates a GetTeamActivitiesDefault with default headers values
func NewGetTeamActivitiesDefault(code int) *GetTeamActivitiesDefault {
	return &GetTeamActivitiesDefault{
		_statusCode: code,
	}
}

/*
GetTeamActivitiesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetTeamActivitiesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get team activities default response has a 2xx status code
func (o *GetTeamActivitiesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get team activities default response has a 3xx status code
func (o *GetTeamActivitiesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get team activities default response has a 4xx status code
func (o *GetTeamActivitiesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get team activities default response has a 5xx status code
func (o *GetTeamActivitiesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get team activities default response a status code equal to that given
func (o *GetTeamActivitiesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get team activities default response
func (o *GetTeamActivitiesDefault) Code() int {
	return o._statusCode
}

func (o *GetTeamActivitiesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] GetTeamActivities default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamActivitiesDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}/activities][%d] GetTeamActivities default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamActivitiesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetTeamActivitiesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
