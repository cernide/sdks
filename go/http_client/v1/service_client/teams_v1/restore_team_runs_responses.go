// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/go/http_client/v1/service_model"
)

// RestoreTeamRunsReader is a Reader for the RestoreTeamRuns structure.
type RestoreTeamRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreTeamRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreTeamRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRestoreTeamRunsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRestoreTeamRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreTeamRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRestoreTeamRunsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRestoreTeamRunsOK creates a RestoreTeamRunsOK with default headers values
func NewRestoreTeamRunsOK() *RestoreTeamRunsOK {
	return &RestoreTeamRunsOK{}
}

/*
RestoreTeamRunsOK describes a response with status code 200, with default header values.

A successful response.
*/
type RestoreTeamRunsOK struct {
}

// IsSuccess returns true when this restore team runs o k response has a 2xx status code
func (o *RestoreTeamRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore team runs o k response has a 3xx status code
func (o *RestoreTeamRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore team runs o k response has a 4xx status code
func (o *RestoreTeamRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore team runs o k response has a 5xx status code
func (o *RestoreTeamRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore team runs o k response a status code equal to that given
func (o *RestoreTeamRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restore team runs o k response
func (o *RestoreTeamRunsOK) Code() int {
	return 200
}

func (o *RestoreTeamRunsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsOK ", 200)
}

func (o *RestoreTeamRunsOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsOK ", 200)
}

func (o *RestoreTeamRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreTeamRunsNoContent creates a RestoreTeamRunsNoContent with default headers values
func NewRestoreTeamRunsNoContent() *RestoreTeamRunsNoContent {
	return &RestoreTeamRunsNoContent{}
}

/*
RestoreTeamRunsNoContent describes a response with status code 204, with default header values.

No content.
*/
type RestoreTeamRunsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this restore team runs no content response has a 2xx status code
func (o *RestoreTeamRunsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore team runs no content response has a 3xx status code
func (o *RestoreTeamRunsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore team runs no content response has a 4xx status code
func (o *RestoreTeamRunsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore team runs no content response has a 5xx status code
func (o *RestoreTeamRunsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restore team runs no content response a status code equal to that given
func (o *RestoreTeamRunsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the restore team runs no content response
func (o *RestoreTeamRunsNoContent) Code() int {
	return 204
}

func (o *RestoreTeamRunsNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsNoContent  %+v", 204, o.Payload)
}

func (o *RestoreTeamRunsNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsNoContent  %+v", 204, o.Payload)
}

func (o *RestoreTeamRunsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreTeamRunsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreTeamRunsForbidden creates a RestoreTeamRunsForbidden with default headers values
func NewRestoreTeamRunsForbidden() *RestoreTeamRunsForbidden {
	return &RestoreTeamRunsForbidden{}
}

/*
RestoreTeamRunsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type RestoreTeamRunsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this restore team runs forbidden response has a 2xx status code
func (o *RestoreTeamRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore team runs forbidden response has a 3xx status code
func (o *RestoreTeamRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore team runs forbidden response has a 4xx status code
func (o *RestoreTeamRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore team runs forbidden response has a 5xx status code
func (o *RestoreTeamRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore team runs forbidden response a status code equal to that given
func (o *RestoreTeamRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restore team runs forbidden response
func (o *RestoreTeamRunsForbidden) Code() int {
	return 403
}

func (o *RestoreTeamRunsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsForbidden  %+v", 403, o.Payload)
}

func (o *RestoreTeamRunsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsForbidden  %+v", 403, o.Payload)
}

func (o *RestoreTeamRunsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreTeamRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreTeamRunsNotFound creates a RestoreTeamRunsNotFound with default headers values
func NewRestoreTeamRunsNotFound() *RestoreTeamRunsNotFound {
	return &RestoreTeamRunsNotFound{}
}

/*
RestoreTeamRunsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type RestoreTeamRunsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this restore team runs not found response has a 2xx status code
func (o *RestoreTeamRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore team runs not found response has a 3xx status code
func (o *RestoreTeamRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore team runs not found response has a 4xx status code
func (o *RestoreTeamRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore team runs not found response has a 5xx status code
func (o *RestoreTeamRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore team runs not found response a status code equal to that given
func (o *RestoreTeamRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restore team runs not found response
func (o *RestoreTeamRunsNotFound) Code() int {
	return 404
}

func (o *RestoreTeamRunsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsNotFound  %+v", 404, o.Payload)
}

func (o *RestoreTeamRunsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] restoreTeamRunsNotFound  %+v", 404, o.Payload)
}

func (o *RestoreTeamRunsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreTeamRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreTeamRunsDefault creates a RestoreTeamRunsDefault with default headers values
func NewRestoreTeamRunsDefault(code int) *RestoreTeamRunsDefault {
	return &RestoreTeamRunsDefault{
		_statusCode: code,
	}
}

/*
RestoreTeamRunsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type RestoreTeamRunsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this restore team runs default response has a 2xx status code
func (o *RestoreTeamRunsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this restore team runs default response has a 3xx status code
func (o *RestoreTeamRunsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this restore team runs default response has a 4xx status code
func (o *RestoreTeamRunsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this restore team runs default response has a 5xx status code
func (o *RestoreTeamRunsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this restore team runs default response a status code equal to that given
func (o *RestoreTeamRunsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the restore team runs default response
func (o *RestoreTeamRunsDefault) Code() int {
	return o._statusCode
}

func (o *RestoreTeamRunsDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] RestoreTeamRuns default  %+v", o._statusCode, o.Payload)
}

func (o *RestoreTeamRunsDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/restore][%d] RestoreTeamRuns default  %+v", o._statusCode, o.Payload)
}

func (o *RestoreTeamRunsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RestoreTeamRunsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
