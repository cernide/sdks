// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetTeamMultiRunEventsReader is a Reader for the GetTeamMultiRunEvents structure.
type GetTeamMultiRunEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamMultiRunEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamMultiRunEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetTeamMultiRunEventsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetTeamMultiRunEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTeamMultiRunEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetTeamMultiRunEventsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTeamMultiRunEventsOK creates a GetTeamMultiRunEventsOK with default headers values
func NewGetTeamMultiRunEventsOK() *GetTeamMultiRunEventsOK {
	return &GetTeamMultiRunEventsOK{}
}

/*
GetTeamMultiRunEventsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetTeamMultiRunEventsOK struct {
	Payload *service_model.V1MultiEventsResponse
}

// IsSuccess returns true when this get team multi run events o k response has a 2xx status code
func (o *GetTeamMultiRunEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team multi run events o k response has a 3xx status code
func (o *GetTeamMultiRunEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team multi run events o k response has a 4xx status code
func (o *GetTeamMultiRunEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team multi run events o k response has a 5xx status code
func (o *GetTeamMultiRunEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get team multi run events o k response a status code equal to that given
func (o *GetTeamMultiRunEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get team multi run events o k response
func (o *GetTeamMultiRunEventsOK) Code() int {
	return 200
}

func (o *GetTeamMultiRunEventsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsOK  %+v", 200, o.Payload)
}

func (o *GetTeamMultiRunEventsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsOK  %+v", 200, o.Payload)
}

func (o *GetTeamMultiRunEventsOK) GetPayload() *service_model.V1MultiEventsResponse {
	return o.Payload
}

func (o *GetTeamMultiRunEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1MultiEventsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamMultiRunEventsNoContent creates a GetTeamMultiRunEventsNoContent with default headers values
func NewGetTeamMultiRunEventsNoContent() *GetTeamMultiRunEventsNoContent {
	return &GetTeamMultiRunEventsNoContent{}
}

/*
GetTeamMultiRunEventsNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetTeamMultiRunEventsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get team multi run events no content response has a 2xx status code
func (o *GetTeamMultiRunEventsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team multi run events no content response has a 3xx status code
func (o *GetTeamMultiRunEventsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team multi run events no content response has a 4xx status code
func (o *GetTeamMultiRunEventsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team multi run events no content response has a 5xx status code
func (o *GetTeamMultiRunEventsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get team multi run events no content response a status code equal to that given
func (o *GetTeamMultiRunEventsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get team multi run events no content response
func (o *GetTeamMultiRunEventsNoContent) Code() int {
	return 204
}

func (o *GetTeamMultiRunEventsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsNoContent  %+v", 204, o.Payload)
}

func (o *GetTeamMultiRunEventsNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsNoContent  %+v", 204, o.Payload)
}

func (o *GetTeamMultiRunEventsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamMultiRunEventsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamMultiRunEventsForbidden creates a GetTeamMultiRunEventsForbidden with default headers values
func NewGetTeamMultiRunEventsForbidden() *GetTeamMultiRunEventsForbidden {
	return &GetTeamMultiRunEventsForbidden{}
}

/*
GetTeamMultiRunEventsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetTeamMultiRunEventsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get team multi run events forbidden response has a 2xx status code
func (o *GetTeamMultiRunEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team multi run events forbidden response has a 3xx status code
func (o *GetTeamMultiRunEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team multi run events forbidden response has a 4xx status code
func (o *GetTeamMultiRunEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team multi run events forbidden response has a 5xx status code
func (o *GetTeamMultiRunEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get team multi run events forbidden response a status code equal to that given
func (o *GetTeamMultiRunEventsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get team multi run events forbidden response
func (o *GetTeamMultiRunEventsForbidden) Code() int {
	return 403
}

func (o *GetTeamMultiRunEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamMultiRunEventsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamMultiRunEventsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamMultiRunEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamMultiRunEventsNotFound creates a GetTeamMultiRunEventsNotFound with default headers values
func NewGetTeamMultiRunEventsNotFound() *GetTeamMultiRunEventsNotFound {
	return &GetTeamMultiRunEventsNotFound{}
}

/*
GetTeamMultiRunEventsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetTeamMultiRunEventsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get team multi run events not found response has a 2xx status code
func (o *GetTeamMultiRunEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team multi run events not found response has a 3xx status code
func (o *GetTeamMultiRunEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team multi run events not found response has a 4xx status code
func (o *GetTeamMultiRunEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team multi run events not found response has a 5xx status code
func (o *GetTeamMultiRunEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get team multi run events not found response a status code equal to that given
func (o *GetTeamMultiRunEventsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get team multi run events not found response
func (o *GetTeamMultiRunEventsNotFound) Code() int {
	return 404
}

func (o *GetTeamMultiRunEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamMultiRunEventsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] getTeamMultiRunEventsNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamMultiRunEventsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamMultiRunEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamMultiRunEventsDefault creates a GetTeamMultiRunEventsDefault with default headers values
func NewGetTeamMultiRunEventsDefault(code int) *GetTeamMultiRunEventsDefault {
	return &GetTeamMultiRunEventsDefault{
		_statusCode: code,
	}
}

/*
GetTeamMultiRunEventsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetTeamMultiRunEventsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get team multi run events default response has a 2xx status code
func (o *GetTeamMultiRunEventsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get team multi run events default response has a 3xx status code
func (o *GetTeamMultiRunEventsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get team multi run events default response has a 4xx status code
func (o *GetTeamMultiRunEventsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get team multi run events default response has a 5xx status code
func (o *GetTeamMultiRunEventsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get team multi run events default response a status code equal to that given
func (o *GetTeamMultiRunEventsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get team multi run events default response
func (o *GetTeamMultiRunEventsDefault) Code() int {
	return o._statusCode
}

func (o *GetTeamMultiRunEventsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] GetTeamMultiRunEvents default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamMultiRunEventsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{entity}/runs/multi/events/{kind}][%d] GetTeamMultiRunEvents default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamMultiRunEventsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetTeamMultiRunEventsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
