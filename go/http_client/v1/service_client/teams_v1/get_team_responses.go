// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/v2/go/http_client/v1/service_model"
)

// GetTeamReader is a Reader for the GetTeam structure.
type GetTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetTeamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetTeamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTeamOK creates a GetTeamOK with default headers values
func NewGetTeamOK() *GetTeamOK {
	return &GetTeamOK{}
}

/*
GetTeamOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetTeamOK struct {
	Payload *service_model.V1Team
}

// IsSuccess returns true when this get team o k response has a 2xx status code
func (o *GetTeamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team o k response has a 3xx status code
func (o *GetTeamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team o k response has a 4xx status code
func (o *GetTeamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team o k response has a 5xx status code
func (o *GetTeamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get team o k response a status code equal to that given
func (o *GetTeamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get team o k response
func (o *GetTeamOK) Code() int {
	return 200
}

func (o *GetTeamOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamOK  %+v", 200, o.Payload)
}

func (o *GetTeamOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamOK  %+v", 200, o.Payload)
}

func (o *GetTeamOK) GetPayload() *service_model.V1Team {
	return o.Payload
}

func (o *GetTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamNoContent creates a GetTeamNoContent with default headers values
func NewGetTeamNoContent() *GetTeamNoContent {
	return &GetTeamNoContent{}
}

/*
GetTeamNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetTeamNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get team no content response has a 2xx status code
func (o *GetTeamNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team no content response has a 3xx status code
func (o *GetTeamNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team no content response has a 4xx status code
func (o *GetTeamNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team no content response has a 5xx status code
func (o *GetTeamNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get team no content response a status code equal to that given
func (o *GetTeamNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get team no content response
func (o *GetTeamNoContent) Code() int {
	return 204
}

func (o *GetTeamNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamNoContent  %+v", 204, o.Payload)
}

func (o *GetTeamNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamNoContent  %+v", 204, o.Payload)
}

func (o *GetTeamNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamForbidden creates a GetTeamForbidden with default headers values
func NewGetTeamForbidden() *GetTeamForbidden {
	return &GetTeamForbidden{}
}

/*
GetTeamForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetTeamForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get team forbidden response has a 2xx status code
func (o *GetTeamForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team forbidden response has a 3xx status code
func (o *GetTeamForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team forbidden response has a 4xx status code
func (o *GetTeamForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team forbidden response has a 5xx status code
func (o *GetTeamForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get team forbidden response a status code equal to that given
func (o *GetTeamForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get team forbidden response
func (o *GetTeamForbidden) Code() int {
	return 403
}

func (o *GetTeamForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamNotFound creates a GetTeamNotFound with default headers values
func NewGetTeamNotFound() *GetTeamNotFound {
	return &GetTeamNotFound{}
}

/*
GetTeamNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetTeamNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get team not found response has a 2xx status code
func (o *GetTeamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team not found response has a 3xx status code
func (o *GetTeamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team not found response has a 4xx status code
func (o *GetTeamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team not found response has a 5xx status code
func (o *GetTeamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get team not found response a status code equal to that given
func (o *GetTeamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get team not found response
func (o *GetTeamNotFound) Code() int {
	return 404
}

func (o *GetTeamNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] getTeamNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamDefault creates a GetTeamDefault with default headers values
func NewGetTeamDefault(code int) *GetTeamDefault {
	return &GetTeamDefault{
		_statusCode: code,
	}
}

/*
GetTeamDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetTeamDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get team default response has a 2xx status code
func (o *GetTeamDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get team default response has a 3xx status code
func (o *GetTeamDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get team default response has a 4xx status code
func (o *GetTeamDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get team default response has a 5xx status code
func (o *GetTeamDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get team default response a status code equal to that given
func (o *GetTeamDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get team default response
func (o *GetTeamDefault) Code() int {
	return o._statusCode
}

func (o *GetTeamDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] GetTeam default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{name}][%d] GetTeam default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetTeamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
