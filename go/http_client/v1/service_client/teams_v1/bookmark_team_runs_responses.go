// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// BookmarkTeamRunsReader is a Reader for the BookmarkTeamRuns structure.
type BookmarkTeamRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BookmarkTeamRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBookmarkTeamRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewBookmarkTeamRunsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewBookmarkTeamRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBookmarkTeamRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBookmarkTeamRunsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBookmarkTeamRunsOK creates a BookmarkTeamRunsOK with default headers values
func NewBookmarkTeamRunsOK() *BookmarkTeamRunsOK {
	return &BookmarkTeamRunsOK{}
}

/*
BookmarkTeamRunsOK describes a response with status code 200, with default header values.

A successful response.
*/
type BookmarkTeamRunsOK struct {
}

// IsSuccess returns true when this bookmark team runs o k response has a 2xx status code
func (o *BookmarkTeamRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bookmark team runs o k response has a 3xx status code
func (o *BookmarkTeamRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bookmark team runs o k response has a 4xx status code
func (o *BookmarkTeamRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bookmark team runs o k response has a 5xx status code
func (o *BookmarkTeamRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bookmark team runs o k response a status code equal to that given
func (o *BookmarkTeamRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bookmark team runs o k response
func (o *BookmarkTeamRunsOK) Code() int {
	return 200
}

func (o *BookmarkTeamRunsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsOK ", 200)
}

func (o *BookmarkTeamRunsOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsOK ", 200)
}

func (o *BookmarkTeamRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBookmarkTeamRunsNoContent creates a BookmarkTeamRunsNoContent with default headers values
func NewBookmarkTeamRunsNoContent() *BookmarkTeamRunsNoContent {
	return &BookmarkTeamRunsNoContent{}
}

/*
BookmarkTeamRunsNoContent describes a response with status code 204, with default header values.

No content.
*/
type BookmarkTeamRunsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this bookmark team runs no content response has a 2xx status code
func (o *BookmarkTeamRunsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bookmark team runs no content response has a 3xx status code
func (o *BookmarkTeamRunsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bookmark team runs no content response has a 4xx status code
func (o *BookmarkTeamRunsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this bookmark team runs no content response has a 5xx status code
func (o *BookmarkTeamRunsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this bookmark team runs no content response a status code equal to that given
func (o *BookmarkTeamRunsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the bookmark team runs no content response
func (o *BookmarkTeamRunsNoContent) Code() int {
	return 204
}

func (o *BookmarkTeamRunsNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsNoContent  %+v", 204, o.Payload)
}

func (o *BookmarkTeamRunsNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsNoContent  %+v", 204, o.Payload)
}

func (o *BookmarkTeamRunsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *BookmarkTeamRunsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookmarkTeamRunsForbidden creates a BookmarkTeamRunsForbidden with default headers values
func NewBookmarkTeamRunsForbidden() *BookmarkTeamRunsForbidden {
	return &BookmarkTeamRunsForbidden{}
}

/*
BookmarkTeamRunsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type BookmarkTeamRunsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this bookmark team runs forbidden response has a 2xx status code
func (o *BookmarkTeamRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bookmark team runs forbidden response has a 3xx status code
func (o *BookmarkTeamRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bookmark team runs forbidden response has a 4xx status code
func (o *BookmarkTeamRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this bookmark team runs forbidden response has a 5xx status code
func (o *BookmarkTeamRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this bookmark team runs forbidden response a status code equal to that given
func (o *BookmarkTeamRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the bookmark team runs forbidden response
func (o *BookmarkTeamRunsForbidden) Code() int {
	return 403
}

func (o *BookmarkTeamRunsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsForbidden  %+v", 403, o.Payload)
}

func (o *BookmarkTeamRunsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsForbidden  %+v", 403, o.Payload)
}

func (o *BookmarkTeamRunsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *BookmarkTeamRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookmarkTeamRunsNotFound creates a BookmarkTeamRunsNotFound with default headers values
func NewBookmarkTeamRunsNotFound() *BookmarkTeamRunsNotFound {
	return &BookmarkTeamRunsNotFound{}
}

/*
BookmarkTeamRunsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type BookmarkTeamRunsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this bookmark team runs not found response has a 2xx status code
func (o *BookmarkTeamRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bookmark team runs not found response has a 3xx status code
func (o *BookmarkTeamRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bookmark team runs not found response has a 4xx status code
func (o *BookmarkTeamRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this bookmark team runs not found response has a 5xx status code
func (o *BookmarkTeamRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this bookmark team runs not found response a status code equal to that given
func (o *BookmarkTeamRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the bookmark team runs not found response
func (o *BookmarkTeamRunsNotFound) Code() int {
	return 404
}

func (o *BookmarkTeamRunsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsNotFound  %+v", 404, o.Payload)
}

func (o *BookmarkTeamRunsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] bookmarkTeamRunsNotFound  %+v", 404, o.Payload)
}

func (o *BookmarkTeamRunsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *BookmarkTeamRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookmarkTeamRunsDefault creates a BookmarkTeamRunsDefault with default headers values
func NewBookmarkTeamRunsDefault(code int) *BookmarkTeamRunsDefault {
	return &BookmarkTeamRunsDefault{
		_statusCode: code,
	}
}

/*
BookmarkTeamRunsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type BookmarkTeamRunsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this bookmark team runs default response has a 2xx status code
func (o *BookmarkTeamRunsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this bookmark team runs default response has a 3xx status code
func (o *BookmarkTeamRunsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this bookmark team runs default response has a 4xx status code
func (o *BookmarkTeamRunsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this bookmark team runs default response has a 5xx status code
func (o *BookmarkTeamRunsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this bookmark team runs default response a status code equal to that given
func (o *BookmarkTeamRunsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the bookmark team runs default response
func (o *BookmarkTeamRunsDefault) Code() int {
	return o._statusCode
}

func (o *BookmarkTeamRunsDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] BookmarkTeamRuns default  %+v", o._statusCode, o.Payload)
}

func (o *BookmarkTeamRunsDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/teams/{name}/runs/bookmark][%d] BookmarkTeamRuns default  %+v", o._statusCode, o.Payload)
}

func (o *BookmarkTeamRunsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *BookmarkTeamRunsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
