// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package connections_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListConnectionNamesReader is a Reader for the ListConnectionNames structure.
type ListConnectionNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConnectionNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConnectionNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListConnectionNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListConnectionNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListConnectionNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListConnectionNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListConnectionNamesOK creates a ListConnectionNamesOK with default headers values
func NewListConnectionNamesOK() *ListConnectionNamesOK {
	return &ListConnectionNamesOK{}
}

/* ListConnectionNamesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListConnectionNamesOK struct {
	Payload *service_model.V1ListConnectionsResponse
}

func (o *ListConnectionNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/connections/names][%d] listConnectionNamesOK  %+v", 200, o.Payload)
}
func (o *ListConnectionNamesOK) GetPayload() *service_model.V1ListConnectionsResponse {
	return o.Payload
}

func (o *ListConnectionNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListConnectionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConnectionNamesNoContent creates a ListConnectionNamesNoContent with default headers values
func NewListConnectionNamesNoContent() *ListConnectionNamesNoContent {
	return &ListConnectionNamesNoContent{}
}

/* ListConnectionNamesNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListConnectionNamesNoContent struct {
	Payload interface{}
}

func (o *ListConnectionNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/connections/names][%d] listConnectionNamesNoContent  %+v", 204, o.Payload)
}
func (o *ListConnectionNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListConnectionNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConnectionNamesForbidden creates a ListConnectionNamesForbidden with default headers values
func NewListConnectionNamesForbidden() *ListConnectionNamesForbidden {
	return &ListConnectionNamesForbidden{}
}

/* ListConnectionNamesForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListConnectionNamesForbidden struct {
	Payload interface{}
}

func (o *ListConnectionNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/connections/names][%d] listConnectionNamesForbidden  %+v", 403, o.Payload)
}
func (o *ListConnectionNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListConnectionNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConnectionNamesNotFound creates a ListConnectionNamesNotFound with default headers values
func NewListConnectionNamesNotFound() *ListConnectionNamesNotFound {
	return &ListConnectionNamesNotFound{}
}

/* ListConnectionNamesNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListConnectionNamesNotFound struct {
	Payload interface{}
}

func (o *ListConnectionNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/connections/names][%d] listConnectionNamesNotFound  %+v", 404, o.Payload)
}
func (o *ListConnectionNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListConnectionNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConnectionNamesDefault creates a ListConnectionNamesDefault with default headers values
func NewListConnectionNamesDefault(code int) *ListConnectionNamesDefault {
	return &ListConnectionNamesDefault{
		_statusCode: code,
	}
}

/* ListConnectionNamesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListConnectionNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list connection names default response
func (o *ListConnectionNamesDefault) Code() int {
	return o._statusCode
}

func (o *ListConnectionNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/connections/names][%d] ListConnectionNames default  %+v", o._statusCode, o.Payload)
}
func (o *ListConnectionNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListConnectionNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
