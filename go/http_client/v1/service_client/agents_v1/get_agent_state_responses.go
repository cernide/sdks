// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package agents_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetAgentStateReader is a Reader for the GetAgentState structure.
type GetAgentStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAgentStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAgentStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetAgentStateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetAgentStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAgentStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetAgentStateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAgentStateOK creates a GetAgentStateOK with default headers values
func NewGetAgentStateOK() *GetAgentStateOK {
	return &GetAgentStateOK{}
}

/*
GetAgentStateOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetAgentStateOK struct {
	Payload *service_model.V1AgentStateResponse
}

// IsSuccess returns true when this get agent state o k response has a 2xx status code
func (o *GetAgentStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get agent state o k response has a 3xx status code
func (o *GetAgentStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get agent state o k response has a 4xx status code
func (o *GetAgentStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get agent state o k response has a 5xx status code
func (o *GetAgentStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get agent state o k response a status code equal to that given
func (o *GetAgentStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get agent state o k response
func (o *GetAgentStateOK) Code() int {
	return 200
}

func (o *GetAgentStateOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateOK  %+v", 200, o.Payload)
}

func (o *GetAgentStateOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateOK  %+v", 200, o.Payload)
}

func (o *GetAgentStateOK) GetPayload() *service_model.V1AgentStateResponse {
	return o.Payload
}

func (o *GetAgentStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1AgentStateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAgentStateNoContent creates a GetAgentStateNoContent with default headers values
func NewGetAgentStateNoContent() *GetAgentStateNoContent {
	return &GetAgentStateNoContent{}
}

/*
GetAgentStateNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetAgentStateNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get agent state no content response has a 2xx status code
func (o *GetAgentStateNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get agent state no content response has a 3xx status code
func (o *GetAgentStateNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get agent state no content response has a 4xx status code
func (o *GetAgentStateNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get agent state no content response has a 5xx status code
func (o *GetAgentStateNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get agent state no content response a status code equal to that given
func (o *GetAgentStateNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get agent state no content response
func (o *GetAgentStateNoContent) Code() int {
	return 204
}

func (o *GetAgentStateNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateNoContent  %+v", 204, o.Payload)
}

func (o *GetAgentStateNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateNoContent  %+v", 204, o.Payload)
}

func (o *GetAgentStateNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAgentStateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAgentStateForbidden creates a GetAgentStateForbidden with default headers values
func NewGetAgentStateForbidden() *GetAgentStateForbidden {
	return &GetAgentStateForbidden{}
}

/*
GetAgentStateForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetAgentStateForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get agent state forbidden response has a 2xx status code
func (o *GetAgentStateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get agent state forbidden response has a 3xx status code
func (o *GetAgentStateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get agent state forbidden response has a 4xx status code
func (o *GetAgentStateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get agent state forbidden response has a 5xx status code
func (o *GetAgentStateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get agent state forbidden response a status code equal to that given
func (o *GetAgentStateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get agent state forbidden response
func (o *GetAgentStateForbidden) Code() int {
	return 403
}

func (o *GetAgentStateForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateForbidden  %+v", 403, o.Payload)
}

func (o *GetAgentStateForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateForbidden  %+v", 403, o.Payload)
}

func (o *GetAgentStateForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAgentStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAgentStateNotFound creates a GetAgentStateNotFound with default headers values
func NewGetAgentStateNotFound() *GetAgentStateNotFound {
	return &GetAgentStateNotFound{}
}

/*
GetAgentStateNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetAgentStateNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get agent state not found response has a 2xx status code
func (o *GetAgentStateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get agent state not found response has a 3xx status code
func (o *GetAgentStateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get agent state not found response has a 4xx status code
func (o *GetAgentStateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get agent state not found response has a 5xx status code
func (o *GetAgentStateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get agent state not found response a status code equal to that given
func (o *GetAgentStateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get agent state not found response
func (o *GetAgentStateNotFound) Code() int {
	return 404
}

func (o *GetAgentStateNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateNotFound  %+v", 404, o.Payload)
}

func (o *GetAgentStateNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] getAgentStateNotFound  %+v", 404, o.Payload)
}

func (o *GetAgentStateNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAgentStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAgentStateDefault creates a GetAgentStateDefault with default headers values
func NewGetAgentStateDefault(code int) *GetAgentStateDefault {
	return &GetAgentStateDefault{
		_statusCode: code,
	}
}

/*
GetAgentStateDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetAgentStateDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get agent state default response has a 2xx status code
func (o *GetAgentStateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get agent state default response has a 3xx status code
func (o *GetAgentStateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get agent state default response has a 4xx status code
func (o *GetAgentStateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get agent state default response has a 5xx status code
func (o *GetAgentStateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get agent state default response a status code equal to that given
func (o *GetAgentStateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get agent state default response
func (o *GetAgentStateDefault) Code() int {
	return o._statusCode
}

func (o *GetAgentStateDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] GetAgentState default  %+v", o._statusCode, o.Payload)
}

func (o *GetAgentStateDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{uuid}/state][%d] GetAgentState default  %+v", o._statusCode, o.Payload)
}

func (o *GetAgentStateDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetAgentStateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
