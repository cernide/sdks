// Code generated by go-swagger; DO NOT EDIT.

package agents_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// CronAgentReader is a Reader for the CronAgent structure.
type CronAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronAgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCronAgentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCronAgentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronAgentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCronAgentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCronAgentOK creates a CronAgentOK with default headers values
func NewCronAgentOK() *CronAgentOK {
	return &CronAgentOK{}
}

/*
CronAgentOK describes a response with status code 200, with default header values.

A successful response.
*/
type CronAgentOK struct {
}

// IsSuccess returns true when this cron agent o k response has a 2xx status code
func (o *CronAgentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron agent o k response has a 3xx status code
func (o *CronAgentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron agent o k response has a 4xx status code
func (o *CronAgentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron agent o k response has a 5xx status code
func (o *CronAgentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron agent o k response a status code equal to that given
func (o *CronAgentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cron agent o k response
func (o *CronAgentOK) Code() int {
	return 200
}

func (o *CronAgentOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentOK ", 200)
}

func (o *CronAgentOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentOK ", 200)
}

func (o *CronAgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCronAgentNoContent creates a CronAgentNoContent with default headers values
func NewCronAgentNoContent() *CronAgentNoContent {
	return &CronAgentNoContent{}
}

/*
CronAgentNoContent describes a response with status code 204, with default header values.

No content.
*/
type CronAgentNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this cron agent no content response has a 2xx status code
func (o *CronAgentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron agent no content response has a 3xx status code
func (o *CronAgentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron agent no content response has a 4xx status code
func (o *CronAgentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron agent no content response has a 5xx status code
func (o *CronAgentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this cron agent no content response a status code equal to that given
func (o *CronAgentNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the cron agent no content response
func (o *CronAgentNoContent) Code() int {
	return 204
}

func (o *CronAgentNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentNoContent  %+v", 204, o.Payload)
}

func (o *CronAgentNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentNoContent  %+v", 204, o.Payload)
}

func (o *CronAgentNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *CronAgentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronAgentForbidden creates a CronAgentForbidden with default headers values
func NewCronAgentForbidden() *CronAgentForbidden {
	return &CronAgentForbidden{}
}

/*
CronAgentForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type CronAgentForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this cron agent forbidden response has a 2xx status code
func (o *CronAgentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron agent forbidden response has a 3xx status code
func (o *CronAgentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron agent forbidden response has a 4xx status code
func (o *CronAgentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron agent forbidden response has a 5xx status code
func (o *CronAgentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron agent forbidden response a status code equal to that given
func (o *CronAgentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cron agent forbidden response
func (o *CronAgentForbidden) Code() int {
	return 403
}

func (o *CronAgentForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentForbidden  %+v", 403, o.Payload)
}

func (o *CronAgentForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentForbidden  %+v", 403, o.Payload)
}

func (o *CronAgentForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CronAgentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronAgentNotFound creates a CronAgentNotFound with default headers values
func NewCronAgentNotFound() *CronAgentNotFound {
	return &CronAgentNotFound{}
}

/*
CronAgentNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type CronAgentNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this cron agent not found response has a 2xx status code
func (o *CronAgentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron agent not found response has a 3xx status code
func (o *CronAgentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron agent not found response has a 4xx status code
func (o *CronAgentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron agent not found response has a 5xx status code
func (o *CronAgentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron agent not found response a status code equal to that given
func (o *CronAgentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cron agent not found response
func (o *CronAgentNotFound) Code() int {
	return 404
}

func (o *CronAgentNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentNotFound  %+v", 404, o.Payload)
}

func (o *CronAgentNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] cronAgentNotFound  %+v", 404, o.Payload)
}

func (o *CronAgentNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CronAgentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronAgentDefault creates a CronAgentDefault with default headers values
func NewCronAgentDefault(code int) *CronAgentDefault {
	return &CronAgentDefault{
		_statusCode: code,
	}
}

/*
CronAgentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CronAgentDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this cron agent default response has a 2xx status code
func (o *CronAgentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cron agent default response has a 3xx status code
func (o *CronAgentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cron agent default response has a 4xx status code
func (o *CronAgentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cron agent default response has a 5xx status code
func (o *CronAgentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cron agent default response a status code equal to that given
func (o *CronAgentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the cron agent default response
func (o *CronAgentDefault) Code() int {
	return o._statusCode
}

func (o *CronAgentDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] CronAgent default  %+v", o._statusCode, o.Payload)
}

func (o *CronAgentDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/cron][%d] CronAgent default  %+v", o._statusCode, o.Payload)
}

func (o *CronAgentDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *CronAgentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
