// Code generated by go-swagger; DO NOT EDIT.

package agents_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// CreateAgentStatusReader is a Reader for the CreateAgentStatus structure.
type CreateAgentStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAgentStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAgentStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCreateAgentStatusNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateAgentStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAgentStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateAgentStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateAgentStatusOK creates a CreateAgentStatusOK with default headers values
func NewCreateAgentStatusOK() *CreateAgentStatusOK {
	return &CreateAgentStatusOK{}
}

/*
CreateAgentStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateAgentStatusOK struct {
	Payload *service_model.V1Status
}

// IsSuccess returns true when this create agent status o k response has a 2xx status code
func (o *CreateAgentStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create agent status o k response has a 3xx status code
func (o *CreateAgentStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create agent status o k response has a 4xx status code
func (o *CreateAgentStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create agent status o k response has a 5xx status code
func (o *CreateAgentStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create agent status o k response a status code equal to that given
func (o *CreateAgentStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create agent status o k response
func (o *CreateAgentStatusOK) Code() int {
	return 200
}

func (o *CreateAgentStatusOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusOK  %+v", 200, o.Payload)
}

func (o *CreateAgentStatusOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusOK  %+v", 200, o.Payload)
}

func (o *CreateAgentStatusOK) GetPayload() *service_model.V1Status {
	return o.Payload
}

func (o *CreateAgentStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAgentStatusNoContent creates a CreateAgentStatusNoContent with default headers values
func NewCreateAgentStatusNoContent() *CreateAgentStatusNoContent {
	return &CreateAgentStatusNoContent{}
}

/*
CreateAgentStatusNoContent describes a response with status code 204, with default header values.

No content.
*/
type CreateAgentStatusNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this create agent status no content response has a 2xx status code
func (o *CreateAgentStatusNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create agent status no content response has a 3xx status code
func (o *CreateAgentStatusNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create agent status no content response has a 4xx status code
func (o *CreateAgentStatusNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this create agent status no content response has a 5xx status code
func (o *CreateAgentStatusNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this create agent status no content response a status code equal to that given
func (o *CreateAgentStatusNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the create agent status no content response
func (o *CreateAgentStatusNoContent) Code() int {
	return 204
}

func (o *CreateAgentStatusNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusNoContent  %+v", 204, o.Payload)
}

func (o *CreateAgentStatusNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusNoContent  %+v", 204, o.Payload)
}

func (o *CreateAgentStatusNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateAgentStatusNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAgentStatusForbidden creates a CreateAgentStatusForbidden with default headers values
func NewCreateAgentStatusForbidden() *CreateAgentStatusForbidden {
	return &CreateAgentStatusForbidden{}
}

/*
CreateAgentStatusForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type CreateAgentStatusForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this create agent status forbidden response has a 2xx status code
func (o *CreateAgentStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create agent status forbidden response has a 3xx status code
func (o *CreateAgentStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create agent status forbidden response has a 4xx status code
func (o *CreateAgentStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create agent status forbidden response has a 5xx status code
func (o *CreateAgentStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create agent status forbidden response a status code equal to that given
func (o *CreateAgentStatusForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create agent status forbidden response
func (o *CreateAgentStatusForbidden) Code() int {
	return 403
}

func (o *CreateAgentStatusForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusForbidden  %+v", 403, o.Payload)
}

func (o *CreateAgentStatusForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusForbidden  %+v", 403, o.Payload)
}

func (o *CreateAgentStatusForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateAgentStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAgentStatusNotFound creates a CreateAgentStatusNotFound with default headers values
func NewCreateAgentStatusNotFound() *CreateAgentStatusNotFound {
	return &CreateAgentStatusNotFound{}
}

/*
CreateAgentStatusNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type CreateAgentStatusNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this create agent status not found response has a 2xx status code
func (o *CreateAgentStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create agent status not found response has a 3xx status code
func (o *CreateAgentStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create agent status not found response has a 4xx status code
func (o *CreateAgentStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create agent status not found response has a 5xx status code
func (o *CreateAgentStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create agent status not found response a status code equal to that given
func (o *CreateAgentStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create agent status not found response
func (o *CreateAgentStatusNotFound) Code() int {
	return 404
}

func (o *CreateAgentStatusNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusNotFound  %+v", 404, o.Payload)
}

func (o *CreateAgentStatusNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] createAgentStatusNotFound  %+v", 404, o.Payload)
}

func (o *CreateAgentStatusNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateAgentStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAgentStatusDefault creates a CreateAgentStatusDefault with default headers values
func NewCreateAgentStatusDefault(code int) *CreateAgentStatusDefault {
	return &CreateAgentStatusDefault{
		_statusCode: code,
	}
}

/*
CreateAgentStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateAgentStatusDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this create agent status default response has a 2xx status code
func (o *CreateAgentStatusDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create agent status default response has a 3xx status code
func (o *CreateAgentStatusDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create agent status default response has a 4xx status code
func (o *CreateAgentStatusDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create agent status default response has a 5xx status code
func (o *CreateAgentStatusDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create agent status default response a status code equal to that given
func (o *CreateAgentStatusDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create agent status default response
func (o *CreateAgentStatusDefault) Code() int {
	return o._statusCode
}

func (o *CreateAgentStatusDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] CreateAgentStatus default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAgentStatusDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{uuid}/statuses][%d] CreateAgentStatus default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAgentStatusDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *CreateAgentStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
