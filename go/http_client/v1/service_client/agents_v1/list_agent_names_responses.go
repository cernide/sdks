// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package agents_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListAgentNamesReader is a Reader for the ListAgentNames structure.
type ListAgentNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAgentNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAgentNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListAgentNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListAgentNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAgentNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListAgentNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAgentNamesOK creates a ListAgentNamesOK with default headers values
func NewListAgentNamesOK() *ListAgentNamesOK {
	return &ListAgentNamesOK{}
}

/*
ListAgentNamesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListAgentNamesOK struct {
	Payload *service_model.V1ListAgentsResponse
}

// IsSuccess returns true when this list agent names o k response has a 2xx status code
func (o *ListAgentNamesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list agent names o k response has a 3xx status code
func (o *ListAgentNamesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list agent names o k response has a 4xx status code
func (o *ListAgentNamesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list agent names o k response has a 5xx status code
func (o *ListAgentNamesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list agent names o k response a status code equal to that given
func (o *ListAgentNamesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list agent names o k response
func (o *ListAgentNamesOK) Code() int {
	return 200
}

func (o *ListAgentNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesOK  %+v", 200, o.Payload)
}

func (o *ListAgentNamesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesOK  %+v", 200, o.Payload)
}

func (o *ListAgentNamesOK) GetPayload() *service_model.V1ListAgentsResponse {
	return o.Payload
}

func (o *ListAgentNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListAgentsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAgentNamesNoContent creates a ListAgentNamesNoContent with default headers values
func NewListAgentNamesNoContent() *ListAgentNamesNoContent {
	return &ListAgentNamesNoContent{}
}

/*
ListAgentNamesNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListAgentNamesNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this list agent names no content response has a 2xx status code
func (o *ListAgentNamesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list agent names no content response has a 3xx status code
func (o *ListAgentNamesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list agent names no content response has a 4xx status code
func (o *ListAgentNamesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list agent names no content response has a 5xx status code
func (o *ListAgentNamesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list agent names no content response a status code equal to that given
func (o *ListAgentNamesNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the list agent names no content response
func (o *ListAgentNamesNoContent) Code() int {
	return 204
}

func (o *ListAgentNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListAgentNamesNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListAgentNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAgentNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAgentNamesForbidden creates a ListAgentNamesForbidden with default headers values
func NewListAgentNamesForbidden() *ListAgentNamesForbidden {
	return &ListAgentNamesForbidden{}
}

/*
ListAgentNamesForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListAgentNamesForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this list agent names forbidden response has a 2xx status code
func (o *ListAgentNamesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list agent names forbidden response has a 3xx status code
func (o *ListAgentNamesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list agent names forbidden response has a 4xx status code
func (o *ListAgentNamesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list agent names forbidden response has a 5xx status code
func (o *ListAgentNamesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list agent names forbidden response a status code equal to that given
func (o *ListAgentNamesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list agent names forbidden response
func (o *ListAgentNamesForbidden) Code() int {
	return 403
}

func (o *ListAgentNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListAgentNamesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListAgentNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAgentNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAgentNamesNotFound creates a ListAgentNamesNotFound with default headers values
func NewListAgentNamesNotFound() *ListAgentNamesNotFound {
	return &ListAgentNamesNotFound{}
}

/*
ListAgentNamesNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListAgentNamesNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this list agent names not found response has a 2xx status code
func (o *ListAgentNamesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list agent names not found response has a 3xx status code
func (o *ListAgentNamesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list agent names not found response has a 4xx status code
func (o *ListAgentNamesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list agent names not found response has a 5xx status code
func (o *ListAgentNamesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list agent names not found response a status code equal to that given
func (o *ListAgentNamesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list agent names not found response
func (o *ListAgentNamesNotFound) Code() int {
	return 404
}

func (o *ListAgentNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListAgentNamesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] listAgentNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListAgentNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAgentNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAgentNamesDefault creates a ListAgentNamesDefault with default headers values
func NewListAgentNamesDefault(code int) *ListAgentNamesDefault {
	return &ListAgentNamesDefault{
		_statusCode: code,
	}
}

/*
ListAgentNamesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListAgentNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this list agent names default response has a 2xx status code
func (o *ListAgentNamesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list agent names default response has a 3xx status code
func (o *ListAgentNamesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list agent names default response has a 4xx status code
func (o *ListAgentNamesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list agent names default response has a 5xx status code
func (o *ListAgentNamesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list agent names default response a status code equal to that given
func (o *ListAgentNamesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list agent names default response
func (o *ListAgentNamesDefault) Code() int {
	return o._statusCode
}

func (o *ListAgentNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] ListAgentNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListAgentNamesDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/names][%d] ListAgentNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListAgentNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListAgentNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
