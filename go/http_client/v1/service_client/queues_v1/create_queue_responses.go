// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package queues_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// CreateQueueReader is a Reader for the CreateQueue structure.
type CreateQueueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateQueueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateQueueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCreateQueueNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateQueueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateQueueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateQueueDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateQueueOK creates a CreateQueueOK with default headers values
func NewCreateQueueOK() *CreateQueueOK {
	return &CreateQueueOK{}
}

/* CreateQueueOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateQueueOK struct {
	Payload *service_model.V1Queue
}

// IsSuccess returns true when this create queue o k response has a 2xx status code
func (o *CreateQueueOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create queue o k response has a 3xx status code
func (o *CreateQueueOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create queue o k response has a 4xx status code
func (o *CreateQueueOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create queue o k response has a 5xx status code
func (o *CreateQueueOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create queue o k response a status code equal to that given
func (o *CreateQueueOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateQueueOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueOK  %+v", 200, o.Payload)
}

func (o *CreateQueueOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueOK  %+v", 200, o.Payload)
}

func (o *CreateQueueOK) GetPayload() *service_model.V1Queue {
	return o.Payload
}

func (o *CreateQueueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Queue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueueNoContent creates a CreateQueueNoContent with default headers values
func NewCreateQueueNoContent() *CreateQueueNoContent {
	return &CreateQueueNoContent{}
}

/* CreateQueueNoContent describes a response with status code 204, with default header values.

No content.
*/
type CreateQueueNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this create queue no content response has a 2xx status code
func (o *CreateQueueNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create queue no content response has a 3xx status code
func (o *CreateQueueNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create queue no content response has a 4xx status code
func (o *CreateQueueNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this create queue no content response has a 5xx status code
func (o *CreateQueueNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this create queue no content response a status code equal to that given
func (o *CreateQueueNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *CreateQueueNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueNoContent  %+v", 204, o.Payload)
}

func (o *CreateQueueNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueNoContent  %+v", 204, o.Payload)
}

func (o *CreateQueueNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateQueueNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueueForbidden creates a CreateQueueForbidden with default headers values
func NewCreateQueueForbidden() *CreateQueueForbidden {
	return &CreateQueueForbidden{}
}

/* CreateQueueForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type CreateQueueForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this create queue forbidden response has a 2xx status code
func (o *CreateQueueForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create queue forbidden response has a 3xx status code
func (o *CreateQueueForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create queue forbidden response has a 4xx status code
func (o *CreateQueueForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create queue forbidden response has a 5xx status code
func (o *CreateQueueForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create queue forbidden response a status code equal to that given
func (o *CreateQueueForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateQueueForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueForbidden  %+v", 403, o.Payload)
}

func (o *CreateQueueForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueForbidden  %+v", 403, o.Payload)
}

func (o *CreateQueueForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateQueueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueueNotFound creates a CreateQueueNotFound with default headers values
func NewCreateQueueNotFound() *CreateQueueNotFound {
	return &CreateQueueNotFound{}
}

/* CreateQueueNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type CreateQueueNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this create queue not found response has a 2xx status code
func (o *CreateQueueNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create queue not found response has a 3xx status code
func (o *CreateQueueNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create queue not found response has a 4xx status code
func (o *CreateQueueNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create queue not found response has a 5xx status code
func (o *CreateQueueNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create queue not found response a status code equal to that given
func (o *CreateQueueNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateQueueNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueNotFound  %+v", 404, o.Payload)
}

func (o *CreateQueueNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] createQueueNotFound  %+v", 404, o.Payload)
}

func (o *CreateQueueNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateQueueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueueDefault creates a CreateQueueDefault with default headers values
func NewCreateQueueDefault(code int) *CreateQueueDefault {
	return &CreateQueueDefault{
		_statusCode: code,
	}
}

/* CreateQueueDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateQueueDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the create queue default response
func (o *CreateQueueDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create queue default response has a 2xx status code
func (o *CreateQueueDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create queue default response has a 3xx status code
func (o *CreateQueueDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create queue default response has a 4xx status code
func (o *CreateQueueDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create queue default response has a 5xx status code
func (o *CreateQueueDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create queue default response a status code equal to that given
func (o *CreateQueueDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateQueueDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] CreateQueue default  %+v", o._statusCode, o.Payload)
}

func (o *CreateQueueDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/agents/{agent}/queues][%d] CreateQueue default  %+v", o._statusCode, o.Payload)
}

func (o *CreateQueueDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *CreateQueueDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
