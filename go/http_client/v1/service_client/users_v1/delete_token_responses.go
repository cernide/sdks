// Code generated by go-swagger; DO NOT EDIT.

package users_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/v2/go/http_client/v1/service_model"
)

// DeleteTokenReader is a Reader for the DeleteToken structure.
type DeleteTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteTokenNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteTokenOK creates a DeleteTokenOK with default headers values
func NewDeleteTokenOK() *DeleteTokenOK {
	return &DeleteTokenOK{}
}

/*
DeleteTokenOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteTokenOK struct {
}

// IsSuccess returns true when this delete token o k response has a 2xx status code
func (o *DeleteTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete token o k response has a 3xx status code
func (o *DeleteTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token o k response has a 4xx status code
func (o *DeleteTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete token o k response has a 5xx status code
func (o *DeleteTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token o k response a status code equal to that given
func (o *DeleteTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete token o k response
func (o *DeleteTokenOK) Code() int {
	return 200
}

func (o *DeleteTokenOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenOK ", 200)
}

func (o *DeleteTokenOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenOK ", 200)
}

func (o *DeleteTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTokenNoContent creates a DeleteTokenNoContent with default headers values
func NewDeleteTokenNoContent() *DeleteTokenNoContent {
	return &DeleteTokenNoContent{}
}

/*
DeleteTokenNoContent describes a response with status code 204, with default header values.

No content.
*/
type DeleteTokenNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this delete token no content response has a 2xx status code
func (o *DeleteTokenNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete token no content response has a 3xx status code
func (o *DeleteTokenNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token no content response has a 4xx status code
func (o *DeleteTokenNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete token no content response has a 5xx status code
func (o *DeleteTokenNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token no content response a status code equal to that given
func (o *DeleteTokenNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete token no content response
func (o *DeleteTokenNoContent) Code() int {
	return 204
}

func (o *DeleteTokenNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenNoContent  %+v", 204, o.Payload)
}

func (o *DeleteTokenNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenNoContent  %+v", 204, o.Payload)
}

func (o *DeleteTokenNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteTokenNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenForbidden creates a DeleteTokenForbidden with default headers values
func NewDeleteTokenForbidden() *DeleteTokenForbidden {
	return &DeleteTokenForbidden{}
}

/*
DeleteTokenForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type DeleteTokenForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this delete token forbidden response has a 2xx status code
func (o *DeleteTokenForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete token forbidden response has a 3xx status code
func (o *DeleteTokenForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token forbidden response has a 4xx status code
func (o *DeleteTokenForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete token forbidden response has a 5xx status code
func (o *DeleteTokenForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token forbidden response a status code equal to that given
func (o *DeleteTokenForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete token forbidden response
func (o *DeleteTokenForbidden) Code() int {
	return 403
}

func (o *DeleteTokenForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTokenForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTokenForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenNotFound creates a DeleteTokenNotFound with default headers values
func NewDeleteTokenNotFound() *DeleteTokenNotFound {
	return &DeleteTokenNotFound{}
}

/*
DeleteTokenNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type DeleteTokenNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this delete token not found response has a 2xx status code
func (o *DeleteTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete token not found response has a 3xx status code
func (o *DeleteTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token not found response has a 4xx status code
func (o *DeleteTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete token not found response has a 5xx status code
func (o *DeleteTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token not found response a status code equal to that given
func (o *DeleteTokenNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete token not found response
func (o *DeleteTokenNotFound) Code() int {
	return 404
}

func (o *DeleteTokenNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTokenNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] deleteTokenNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTokenNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenDefault creates a DeleteTokenDefault with default headers values
func NewDeleteTokenDefault(code int) *DeleteTokenDefault {
	return &DeleteTokenDefault{
		_statusCode: code,
	}
}

/*
DeleteTokenDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DeleteTokenDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this delete token default response has a 2xx status code
func (o *DeleteTokenDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete token default response has a 3xx status code
func (o *DeleteTokenDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete token default response has a 4xx status code
func (o *DeleteTokenDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete token default response has a 5xx status code
func (o *DeleteTokenDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete token default response a status code equal to that given
func (o *DeleteTokenDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete token default response
func (o *DeleteTokenDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTokenDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] DeleteToken default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTokenDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/users/tokens/{uuid}][%d] DeleteToken default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTokenDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *DeleteTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
