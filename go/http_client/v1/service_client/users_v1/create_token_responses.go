// Code generated by go-swagger; DO NOT EDIT.

package users_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/go/http_client/v1/service_model"
)

// CreateTokenReader is a Reader for the CreateToken structure.
type CreateTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCreateTokenNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateTokenOK creates a CreateTokenOK with default headers values
func NewCreateTokenOK() *CreateTokenOK {
	return &CreateTokenOK{}
}

/*
CreateTokenOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateTokenOK struct {
	Payload *service_model.V1Token
}

// IsSuccess returns true when this create token o k response has a 2xx status code
func (o *CreateTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create token o k response has a 3xx status code
func (o *CreateTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token o k response has a 4xx status code
func (o *CreateTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create token o k response has a 5xx status code
func (o *CreateTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create token o k response a status code equal to that given
func (o *CreateTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create token o k response
func (o *CreateTokenOK) Code() int {
	return 200
}

func (o *CreateTokenOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenOK  %+v", 200, o.Payload)
}

func (o *CreateTokenOK) String() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenOK  %+v", 200, o.Payload)
}

func (o *CreateTokenOK) GetPayload() *service_model.V1Token {
	return o.Payload
}

func (o *CreateTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Token)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTokenNoContent creates a CreateTokenNoContent with default headers values
func NewCreateTokenNoContent() *CreateTokenNoContent {
	return &CreateTokenNoContent{}
}

/*
CreateTokenNoContent describes a response with status code 204, with default header values.

No content.
*/
type CreateTokenNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this create token no content response has a 2xx status code
func (o *CreateTokenNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create token no content response has a 3xx status code
func (o *CreateTokenNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token no content response has a 4xx status code
func (o *CreateTokenNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this create token no content response has a 5xx status code
func (o *CreateTokenNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this create token no content response a status code equal to that given
func (o *CreateTokenNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the create token no content response
func (o *CreateTokenNoContent) Code() int {
	return 204
}

func (o *CreateTokenNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenNoContent  %+v", 204, o.Payload)
}

func (o *CreateTokenNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenNoContent  %+v", 204, o.Payload)
}

func (o *CreateTokenNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateTokenNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTokenForbidden creates a CreateTokenForbidden with default headers values
func NewCreateTokenForbidden() *CreateTokenForbidden {
	return &CreateTokenForbidden{}
}

/*
CreateTokenForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type CreateTokenForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this create token forbidden response has a 2xx status code
func (o *CreateTokenForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create token forbidden response has a 3xx status code
func (o *CreateTokenForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token forbidden response has a 4xx status code
func (o *CreateTokenForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create token forbidden response has a 5xx status code
func (o *CreateTokenForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create token forbidden response a status code equal to that given
func (o *CreateTokenForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create token forbidden response
func (o *CreateTokenForbidden) Code() int {
	return 403
}

func (o *CreateTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenForbidden  %+v", 403, o.Payload)
}

func (o *CreateTokenForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenForbidden  %+v", 403, o.Payload)
}

func (o *CreateTokenForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTokenNotFound creates a CreateTokenNotFound with default headers values
func NewCreateTokenNotFound() *CreateTokenNotFound {
	return &CreateTokenNotFound{}
}

/*
CreateTokenNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type CreateTokenNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this create token not found response has a 2xx status code
func (o *CreateTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create token not found response has a 3xx status code
func (o *CreateTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token not found response has a 4xx status code
func (o *CreateTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create token not found response has a 5xx status code
func (o *CreateTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create token not found response a status code equal to that given
func (o *CreateTokenNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create token not found response
func (o *CreateTokenNotFound) Code() int {
	return 404
}

func (o *CreateTokenNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenNotFound  %+v", 404, o.Payload)
}

func (o *CreateTokenNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] createTokenNotFound  %+v", 404, o.Payload)
}

func (o *CreateTokenNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTokenDefault creates a CreateTokenDefault with default headers values
func NewCreateTokenDefault(code int) *CreateTokenDefault {
	return &CreateTokenDefault{
		_statusCode: code,
	}
}

/*
CreateTokenDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateTokenDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this create token default response has a 2xx status code
func (o *CreateTokenDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create token default response has a 3xx status code
func (o *CreateTokenDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create token default response has a 4xx status code
func (o *CreateTokenDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create token default response has a 5xx status code
func (o *CreateTokenDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create token default response a status code equal to that given
func (o *CreateTokenDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create token default response
func (o *CreateTokenDefault) Code() int {
	return o._statusCode
}

func (o *CreateTokenDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] CreateToken default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTokenDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/users/tokens][%d] CreateToken default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTokenDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *CreateTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
