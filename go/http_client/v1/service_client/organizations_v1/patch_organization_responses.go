// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// PatchOrganizationReader is a Reader for the PatchOrganization structure.
type PatchOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchOrganizationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPatchOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchOrganizationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchOrganizationOK creates a PatchOrganizationOK with default headers values
func NewPatchOrganizationOK() *PatchOrganizationOK {
	return &PatchOrganizationOK{}
}

/*
PatchOrganizationOK describes a response with status code 200, with default header values.

A successful response.
*/
type PatchOrganizationOK struct {
	Payload *service_model.V1Organization
}

func (o *PatchOrganizationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] patchOrganizationOK  %+v", 200, o.Payload)
}
func (o *PatchOrganizationOK) GetPayload() *service_model.V1Organization {
	return o.Payload
}

func (o *PatchOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrganizationNoContent creates a PatchOrganizationNoContent with default headers values
func NewPatchOrganizationNoContent() *PatchOrganizationNoContent {
	return &PatchOrganizationNoContent{}
}

/*
PatchOrganizationNoContent describes a response with status code 204, with default header values.

No content.
*/
type PatchOrganizationNoContent struct {
	Payload interface{}
}

func (o *PatchOrganizationNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] patchOrganizationNoContent  %+v", 204, o.Payload)
}
func (o *PatchOrganizationNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *PatchOrganizationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrganizationForbidden creates a PatchOrganizationForbidden with default headers values
func NewPatchOrganizationForbidden() *PatchOrganizationForbidden {
	return &PatchOrganizationForbidden{}
}

/*
PatchOrganizationForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type PatchOrganizationForbidden struct {
	Payload interface{}
}

func (o *PatchOrganizationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] patchOrganizationForbidden  %+v", 403, o.Payload)
}
func (o *PatchOrganizationForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *PatchOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrganizationNotFound creates a PatchOrganizationNotFound with default headers values
func NewPatchOrganizationNotFound() *PatchOrganizationNotFound {
	return &PatchOrganizationNotFound{}
}

/*
PatchOrganizationNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type PatchOrganizationNotFound struct {
	Payload interface{}
}

func (o *PatchOrganizationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] patchOrganizationNotFound  %+v", 404, o.Payload)
}
func (o *PatchOrganizationNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *PatchOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrganizationDefault creates a PatchOrganizationDefault with default headers values
func NewPatchOrganizationDefault(code int) *PatchOrganizationDefault {
	return &PatchOrganizationDefault{
		_statusCode: code,
	}
}

/*
PatchOrganizationDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PatchOrganizationDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the patch organization default response
func (o *PatchOrganizationDefault) Code() int {
	return o._statusCode
}

func (o *PatchOrganizationDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] PatchOrganization default  %+v", o._statusCode, o.Payload)
}
func (o *PatchOrganizationDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *PatchOrganizationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
