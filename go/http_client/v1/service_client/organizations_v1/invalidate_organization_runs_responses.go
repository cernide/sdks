// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// InvalidateOrganizationRunsReader is a Reader for the InvalidateOrganizationRuns structure.
type InvalidateOrganizationRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvalidateOrganizationRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInvalidateOrganizationRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewInvalidateOrganizationRunsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewInvalidateOrganizationRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvalidateOrganizationRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewInvalidateOrganizationRunsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewInvalidateOrganizationRunsOK creates a InvalidateOrganizationRunsOK with default headers values
func NewInvalidateOrganizationRunsOK() *InvalidateOrganizationRunsOK {
	return &InvalidateOrganizationRunsOK{}
}

/* InvalidateOrganizationRunsOK describes a response with status code 200, with default header values.

A successful response.
*/
type InvalidateOrganizationRunsOK struct {
}

// IsSuccess returns true when this invalidate organization runs o k response has a 2xx status code
func (o *InvalidateOrganizationRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invalidate organization runs o k response has a 3xx status code
func (o *InvalidateOrganizationRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invalidate organization runs o k response has a 4xx status code
func (o *InvalidateOrganizationRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invalidate organization runs o k response has a 5xx status code
func (o *InvalidateOrganizationRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invalidate organization runs o k response a status code equal to that given
func (o *InvalidateOrganizationRunsOK) IsCode(code int) bool {
	return code == 200
}

func (o *InvalidateOrganizationRunsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsOK ", 200)
}

func (o *InvalidateOrganizationRunsOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsOK ", 200)
}

func (o *InvalidateOrganizationRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvalidateOrganizationRunsNoContent creates a InvalidateOrganizationRunsNoContent with default headers values
func NewInvalidateOrganizationRunsNoContent() *InvalidateOrganizationRunsNoContent {
	return &InvalidateOrganizationRunsNoContent{}
}

/* InvalidateOrganizationRunsNoContent describes a response with status code 204, with default header values.

No content.
*/
type InvalidateOrganizationRunsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this invalidate organization runs no content response has a 2xx status code
func (o *InvalidateOrganizationRunsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invalidate organization runs no content response has a 3xx status code
func (o *InvalidateOrganizationRunsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invalidate organization runs no content response has a 4xx status code
func (o *InvalidateOrganizationRunsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this invalidate organization runs no content response has a 5xx status code
func (o *InvalidateOrganizationRunsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this invalidate organization runs no content response a status code equal to that given
func (o *InvalidateOrganizationRunsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *InvalidateOrganizationRunsNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsNoContent  %+v", 204, o.Payload)
}

func (o *InvalidateOrganizationRunsNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsNoContent  %+v", 204, o.Payload)
}

func (o *InvalidateOrganizationRunsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *InvalidateOrganizationRunsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvalidateOrganizationRunsForbidden creates a InvalidateOrganizationRunsForbidden with default headers values
func NewInvalidateOrganizationRunsForbidden() *InvalidateOrganizationRunsForbidden {
	return &InvalidateOrganizationRunsForbidden{}
}

/* InvalidateOrganizationRunsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type InvalidateOrganizationRunsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this invalidate organization runs forbidden response has a 2xx status code
func (o *InvalidateOrganizationRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invalidate organization runs forbidden response has a 3xx status code
func (o *InvalidateOrganizationRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invalidate organization runs forbidden response has a 4xx status code
func (o *InvalidateOrganizationRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this invalidate organization runs forbidden response has a 5xx status code
func (o *InvalidateOrganizationRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this invalidate organization runs forbidden response a status code equal to that given
func (o *InvalidateOrganizationRunsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *InvalidateOrganizationRunsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsForbidden  %+v", 403, o.Payload)
}

func (o *InvalidateOrganizationRunsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsForbidden  %+v", 403, o.Payload)
}

func (o *InvalidateOrganizationRunsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *InvalidateOrganizationRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvalidateOrganizationRunsNotFound creates a InvalidateOrganizationRunsNotFound with default headers values
func NewInvalidateOrganizationRunsNotFound() *InvalidateOrganizationRunsNotFound {
	return &InvalidateOrganizationRunsNotFound{}
}

/* InvalidateOrganizationRunsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type InvalidateOrganizationRunsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this invalidate organization runs not found response has a 2xx status code
func (o *InvalidateOrganizationRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invalidate organization runs not found response has a 3xx status code
func (o *InvalidateOrganizationRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invalidate organization runs not found response has a 4xx status code
func (o *InvalidateOrganizationRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invalidate organization runs not found response has a 5xx status code
func (o *InvalidateOrganizationRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invalidate organization runs not found response a status code equal to that given
func (o *InvalidateOrganizationRunsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *InvalidateOrganizationRunsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsNotFound  %+v", 404, o.Payload)
}

func (o *InvalidateOrganizationRunsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] invalidateOrganizationRunsNotFound  %+v", 404, o.Payload)
}

func (o *InvalidateOrganizationRunsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *InvalidateOrganizationRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvalidateOrganizationRunsDefault creates a InvalidateOrganizationRunsDefault with default headers values
func NewInvalidateOrganizationRunsDefault(code int) *InvalidateOrganizationRunsDefault {
	return &InvalidateOrganizationRunsDefault{
		_statusCode: code,
	}
}

/* InvalidateOrganizationRunsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type InvalidateOrganizationRunsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the invalidate organization runs default response
func (o *InvalidateOrganizationRunsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this invalidate organization runs default response has a 2xx status code
func (o *InvalidateOrganizationRunsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this invalidate organization runs default response has a 3xx status code
func (o *InvalidateOrganizationRunsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this invalidate organization runs default response has a 4xx status code
func (o *InvalidateOrganizationRunsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this invalidate organization runs default response has a 5xx status code
func (o *InvalidateOrganizationRunsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this invalidate organization runs default response a status code equal to that given
func (o *InvalidateOrganizationRunsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *InvalidateOrganizationRunsDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] InvalidateOrganizationRuns default  %+v", o._statusCode, o.Payload)
}

func (o *InvalidateOrganizationRunsDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/invalidate][%d] InvalidateOrganizationRuns default  %+v", o._statusCode, o.Payload)
}

func (o *InvalidateOrganizationRunsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *InvalidateOrganizationRunsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
