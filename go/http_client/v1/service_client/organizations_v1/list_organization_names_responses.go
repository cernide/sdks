// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListOrganizationNamesReader is a Reader for the ListOrganizationNames structure.
type ListOrganizationNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOrganizationNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOrganizationNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListOrganizationNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListOrganizationNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListOrganizationNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListOrganizationNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListOrganizationNamesOK creates a ListOrganizationNamesOK with default headers values
func NewListOrganizationNamesOK() *ListOrganizationNamesOK {
	return &ListOrganizationNamesOK{}
}

/* ListOrganizationNamesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListOrganizationNamesOK struct {
	Payload *service_model.V1ListOrganizationsResponse
}

// IsSuccess returns true when this list organization names o k response has a 2xx status code
func (o *ListOrganizationNamesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list organization names o k response has a 3xx status code
func (o *ListOrganizationNamesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization names o k response has a 4xx status code
func (o *ListOrganizationNamesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list organization names o k response has a 5xx status code
func (o *ListOrganizationNamesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization names o k response a status code equal to that given
func (o *ListOrganizationNamesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListOrganizationNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesOK  %+v", 200, o.Payload)
}

func (o *ListOrganizationNamesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesOK  %+v", 200, o.Payload)
}

func (o *ListOrganizationNamesOK) GetPayload() *service_model.V1ListOrganizationsResponse {
	return o.Payload
}

func (o *ListOrganizationNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListOrganizationsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationNamesNoContent creates a ListOrganizationNamesNoContent with default headers values
func NewListOrganizationNamesNoContent() *ListOrganizationNamesNoContent {
	return &ListOrganizationNamesNoContent{}
}

/* ListOrganizationNamesNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListOrganizationNamesNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this list organization names no content response has a 2xx status code
func (o *ListOrganizationNamesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list organization names no content response has a 3xx status code
func (o *ListOrganizationNamesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization names no content response has a 4xx status code
func (o *ListOrganizationNamesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list organization names no content response has a 5xx status code
func (o *ListOrganizationNamesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization names no content response a status code equal to that given
func (o *ListOrganizationNamesNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ListOrganizationNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListOrganizationNamesNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListOrganizationNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListOrganizationNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationNamesForbidden creates a ListOrganizationNamesForbidden with default headers values
func NewListOrganizationNamesForbidden() *ListOrganizationNamesForbidden {
	return &ListOrganizationNamesForbidden{}
}

/* ListOrganizationNamesForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListOrganizationNamesForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this list organization names forbidden response has a 2xx status code
func (o *ListOrganizationNamesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization names forbidden response has a 3xx status code
func (o *ListOrganizationNamesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization names forbidden response has a 4xx status code
func (o *ListOrganizationNamesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization names forbidden response has a 5xx status code
func (o *ListOrganizationNamesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization names forbidden response a status code equal to that given
func (o *ListOrganizationNamesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListOrganizationNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListOrganizationNamesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListOrganizationNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListOrganizationNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationNamesNotFound creates a ListOrganizationNamesNotFound with default headers values
func NewListOrganizationNamesNotFound() *ListOrganizationNamesNotFound {
	return &ListOrganizationNamesNotFound{}
}

/* ListOrganizationNamesNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListOrganizationNamesNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this list organization names not found response has a 2xx status code
func (o *ListOrganizationNamesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization names not found response has a 3xx status code
func (o *ListOrganizationNamesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization names not found response has a 4xx status code
func (o *ListOrganizationNamesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization names not found response has a 5xx status code
func (o *ListOrganizationNamesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization names not found response a status code equal to that given
func (o *ListOrganizationNamesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListOrganizationNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListOrganizationNamesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] listOrganizationNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListOrganizationNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListOrganizationNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationNamesDefault creates a ListOrganizationNamesDefault with default headers values
func NewListOrganizationNamesDefault(code int) *ListOrganizationNamesDefault {
	return &ListOrganizationNamesDefault{
		_statusCode: code,
	}
}

/* ListOrganizationNamesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListOrganizationNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list organization names default response
func (o *ListOrganizationNamesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list organization names default response has a 2xx status code
func (o *ListOrganizationNamesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list organization names default response has a 3xx status code
func (o *ListOrganizationNamesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list organization names default response has a 4xx status code
func (o *ListOrganizationNamesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list organization names default response has a 5xx status code
func (o *ListOrganizationNamesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list organization names default response a status code equal to that given
func (o *ListOrganizationNamesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListOrganizationNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] ListOrganizationNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListOrganizationNamesDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/names][%d] ListOrganizationNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListOrganizationNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListOrganizationNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
