// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ApproveOrganizationRunsReader is a Reader for the ApproveOrganizationRuns structure.
type ApproveOrganizationRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApproveOrganizationRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewApproveOrganizationRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewApproveOrganizationRunsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewApproveOrganizationRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewApproveOrganizationRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewApproveOrganizationRunsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewApproveOrganizationRunsOK creates a ApproveOrganizationRunsOK with default headers values
func NewApproveOrganizationRunsOK() *ApproveOrganizationRunsOK {
	return &ApproveOrganizationRunsOK{}
}

/* ApproveOrganizationRunsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ApproveOrganizationRunsOK struct {
}

// IsSuccess returns true when this approve organization runs o k response has a 2xx status code
func (o *ApproveOrganizationRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this approve organization runs o k response has a 3xx status code
func (o *ApproveOrganizationRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this approve organization runs o k response has a 4xx status code
func (o *ApproveOrganizationRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this approve organization runs o k response has a 5xx status code
func (o *ApproveOrganizationRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this approve organization runs o k response a status code equal to that given
func (o *ApproveOrganizationRunsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ApproveOrganizationRunsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsOK ", 200)
}

func (o *ApproveOrganizationRunsOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsOK ", 200)
}

func (o *ApproveOrganizationRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApproveOrganizationRunsNoContent creates a ApproveOrganizationRunsNoContent with default headers values
func NewApproveOrganizationRunsNoContent() *ApproveOrganizationRunsNoContent {
	return &ApproveOrganizationRunsNoContent{}
}

/* ApproveOrganizationRunsNoContent describes a response with status code 204, with default header values.

No content.
*/
type ApproveOrganizationRunsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this approve organization runs no content response has a 2xx status code
func (o *ApproveOrganizationRunsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this approve organization runs no content response has a 3xx status code
func (o *ApproveOrganizationRunsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this approve organization runs no content response has a 4xx status code
func (o *ApproveOrganizationRunsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this approve organization runs no content response has a 5xx status code
func (o *ApproveOrganizationRunsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this approve organization runs no content response a status code equal to that given
func (o *ApproveOrganizationRunsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ApproveOrganizationRunsNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsNoContent  %+v", 204, o.Payload)
}

func (o *ApproveOrganizationRunsNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsNoContent  %+v", 204, o.Payload)
}

func (o *ApproveOrganizationRunsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ApproveOrganizationRunsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApproveOrganizationRunsForbidden creates a ApproveOrganizationRunsForbidden with default headers values
func NewApproveOrganizationRunsForbidden() *ApproveOrganizationRunsForbidden {
	return &ApproveOrganizationRunsForbidden{}
}

/* ApproveOrganizationRunsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ApproveOrganizationRunsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this approve organization runs forbidden response has a 2xx status code
func (o *ApproveOrganizationRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this approve organization runs forbidden response has a 3xx status code
func (o *ApproveOrganizationRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this approve organization runs forbidden response has a 4xx status code
func (o *ApproveOrganizationRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this approve organization runs forbidden response has a 5xx status code
func (o *ApproveOrganizationRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this approve organization runs forbidden response a status code equal to that given
func (o *ApproveOrganizationRunsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ApproveOrganizationRunsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsForbidden  %+v", 403, o.Payload)
}

func (o *ApproveOrganizationRunsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsForbidden  %+v", 403, o.Payload)
}

func (o *ApproveOrganizationRunsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ApproveOrganizationRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApproveOrganizationRunsNotFound creates a ApproveOrganizationRunsNotFound with default headers values
func NewApproveOrganizationRunsNotFound() *ApproveOrganizationRunsNotFound {
	return &ApproveOrganizationRunsNotFound{}
}

/* ApproveOrganizationRunsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ApproveOrganizationRunsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this approve organization runs not found response has a 2xx status code
func (o *ApproveOrganizationRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this approve organization runs not found response has a 3xx status code
func (o *ApproveOrganizationRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this approve organization runs not found response has a 4xx status code
func (o *ApproveOrganizationRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this approve organization runs not found response has a 5xx status code
func (o *ApproveOrganizationRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this approve organization runs not found response a status code equal to that given
func (o *ApproveOrganizationRunsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ApproveOrganizationRunsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsNotFound  %+v", 404, o.Payload)
}

func (o *ApproveOrganizationRunsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] approveOrganizationRunsNotFound  %+v", 404, o.Payload)
}

func (o *ApproveOrganizationRunsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ApproveOrganizationRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApproveOrganizationRunsDefault creates a ApproveOrganizationRunsDefault with default headers values
func NewApproveOrganizationRunsDefault(code int) *ApproveOrganizationRunsDefault {
	return &ApproveOrganizationRunsDefault{
		_statusCode: code,
	}
}

/* ApproveOrganizationRunsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ApproveOrganizationRunsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the approve organization runs default response
func (o *ApproveOrganizationRunsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this approve organization runs default response has a 2xx status code
func (o *ApproveOrganizationRunsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this approve organization runs default response has a 3xx status code
func (o *ApproveOrganizationRunsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this approve organization runs default response has a 4xx status code
func (o *ApproveOrganizationRunsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this approve organization runs default response has a 5xx status code
func (o *ApproveOrganizationRunsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this approve organization runs default response a status code equal to that given
func (o *ApproveOrganizationRunsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ApproveOrganizationRunsDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] ApproveOrganizationRuns default  %+v", o._statusCode, o.Payload)
}

func (o *ApproveOrganizationRunsDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/runs/approve][%d] ApproveOrganizationRuns default  %+v", o._statusCode, o.Payload)
}

func (o *ApproveOrganizationRunsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ApproveOrganizationRunsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
