// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/go/http_client/v1/service_model"
)

// GetOrganizationVersionsReader is a Reader for the GetOrganizationVersions structure.
type GetOrganizationVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetOrganizationVersionsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetOrganizationVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetOrganizationVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetOrganizationVersionsOK creates a GetOrganizationVersionsOK with default headers values
func NewGetOrganizationVersionsOK() *GetOrganizationVersionsOK {
	return &GetOrganizationVersionsOK{}
}

/*
GetOrganizationVersionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetOrganizationVersionsOK struct {
	Payload *service_model.V1ListProjectVersionsResponse
}

// IsSuccess returns true when this get organization versions o k response has a 2xx status code
func (o *GetOrganizationVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization versions o k response has a 3xx status code
func (o *GetOrganizationVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization versions o k response has a 4xx status code
func (o *GetOrganizationVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization versions o k response has a 5xx status code
func (o *GetOrganizationVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization versions o k response a status code equal to that given
func (o *GetOrganizationVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organization versions o k response
func (o *GetOrganizationVersionsOK) Code() int {
	return 200
}

func (o *GetOrganizationVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationVersionsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationVersionsOK) GetPayload() *service_model.V1ListProjectVersionsResponse {
	return o.Payload
}

func (o *GetOrganizationVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListProjectVersionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationVersionsNoContent creates a GetOrganizationVersionsNoContent with default headers values
func NewGetOrganizationVersionsNoContent() *GetOrganizationVersionsNoContent {
	return &GetOrganizationVersionsNoContent{}
}

/*
GetOrganizationVersionsNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetOrganizationVersionsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get organization versions no content response has a 2xx status code
func (o *GetOrganizationVersionsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization versions no content response has a 3xx status code
func (o *GetOrganizationVersionsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization versions no content response has a 4xx status code
func (o *GetOrganizationVersionsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization versions no content response has a 5xx status code
func (o *GetOrganizationVersionsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization versions no content response a status code equal to that given
func (o *GetOrganizationVersionsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get organization versions no content response
func (o *GetOrganizationVersionsNoContent) Code() int {
	return 204
}

func (o *GetOrganizationVersionsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsNoContent  %+v", 204, o.Payload)
}

func (o *GetOrganizationVersionsNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsNoContent  %+v", 204, o.Payload)
}

func (o *GetOrganizationVersionsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetOrganizationVersionsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationVersionsForbidden creates a GetOrganizationVersionsForbidden with default headers values
func NewGetOrganizationVersionsForbidden() *GetOrganizationVersionsForbidden {
	return &GetOrganizationVersionsForbidden{}
}

/*
GetOrganizationVersionsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetOrganizationVersionsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get organization versions forbidden response has a 2xx status code
func (o *GetOrganizationVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization versions forbidden response has a 3xx status code
func (o *GetOrganizationVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization versions forbidden response has a 4xx status code
func (o *GetOrganizationVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization versions forbidden response has a 5xx status code
func (o *GetOrganizationVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization versions forbidden response a status code equal to that given
func (o *GetOrganizationVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organization versions forbidden response
func (o *GetOrganizationVersionsForbidden) Code() int {
	return 403
}

func (o *GetOrganizationVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationVersionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationVersionsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetOrganizationVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationVersionsNotFound creates a GetOrganizationVersionsNotFound with default headers values
func NewGetOrganizationVersionsNotFound() *GetOrganizationVersionsNotFound {
	return &GetOrganizationVersionsNotFound{}
}

/*
GetOrganizationVersionsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetOrganizationVersionsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get organization versions not found response has a 2xx status code
func (o *GetOrganizationVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization versions not found response has a 3xx status code
func (o *GetOrganizationVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization versions not found response has a 4xx status code
func (o *GetOrganizationVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization versions not found response has a 5xx status code
func (o *GetOrganizationVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization versions not found response a status code equal to that given
func (o *GetOrganizationVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organization versions not found response
func (o *GetOrganizationVersionsNotFound) Code() int {
	return 404
}

func (o *GetOrganizationVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] getOrganizationVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationVersionsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetOrganizationVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationVersionsDefault creates a GetOrganizationVersionsDefault with default headers values
func NewGetOrganizationVersionsDefault(code int) *GetOrganizationVersionsDefault {
	return &GetOrganizationVersionsDefault{
		_statusCode: code,
	}
}

/*
GetOrganizationVersionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetOrganizationVersionsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get organization versions default response has a 2xx status code
func (o *GetOrganizationVersionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get organization versions default response has a 3xx status code
func (o *GetOrganizationVersionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get organization versions default response has a 4xx status code
func (o *GetOrganizationVersionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get organization versions default response has a 5xx status code
func (o *GetOrganizationVersionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get organization versions default response a status code equal to that given
func (o *GetOrganizationVersionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get organization versions default response
func (o *GetOrganizationVersionsDefault) Code() int {
	return o._statusCode
}

func (o *GetOrganizationVersionsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] GetOrganizationVersions default  %+v", o._statusCode, o.Payload)
}

func (o *GetOrganizationVersionsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/versions/{kind}][%d] GetOrganizationVersions default  %+v", o._statusCode, o.Payload)
}

func (o *GetOrganizationVersionsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetOrganizationVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
