// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package tags_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// SyncTagsReader is a Reader for the SyncTags structure.
type SyncTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSyncTagsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSyncTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSyncTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSyncTagsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSyncTagsOK creates a SyncTagsOK with default headers values
func NewSyncTagsOK() *SyncTagsOK {
	return &SyncTagsOK{}
}

/*
SyncTagsOK describes a response with status code 200, with default header values.

A successful response.
*/
type SyncTagsOK struct {
}

// IsSuccess returns true when this sync tags o k response has a 2xx status code
func (o *SyncTagsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync tags o k response has a 3xx status code
func (o *SyncTagsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync tags o k response has a 4xx status code
func (o *SyncTagsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync tags o k response has a 5xx status code
func (o *SyncTagsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync tags o k response a status code equal to that given
func (o *SyncTagsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sync tags o k response
func (o *SyncTagsOK) Code() int {
	return 200
}

func (o *SyncTagsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsOK ", 200)
}

func (o *SyncTagsOK) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsOK ", 200)
}

func (o *SyncTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncTagsNoContent creates a SyncTagsNoContent with default headers values
func NewSyncTagsNoContent() *SyncTagsNoContent {
	return &SyncTagsNoContent{}
}

/*
SyncTagsNoContent describes a response with status code 204, with default header values.

No content.
*/
type SyncTagsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this sync tags no content response has a 2xx status code
func (o *SyncTagsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync tags no content response has a 3xx status code
func (o *SyncTagsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync tags no content response has a 4xx status code
func (o *SyncTagsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync tags no content response has a 5xx status code
func (o *SyncTagsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this sync tags no content response a status code equal to that given
func (o *SyncTagsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the sync tags no content response
func (o *SyncTagsNoContent) Code() int {
	return 204
}

func (o *SyncTagsNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsNoContent  %+v", 204, o.Payload)
}

func (o *SyncTagsNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsNoContent  %+v", 204, o.Payload)
}

func (o *SyncTagsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *SyncTagsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncTagsForbidden creates a SyncTagsForbidden with default headers values
func NewSyncTagsForbidden() *SyncTagsForbidden {
	return &SyncTagsForbidden{}
}

/*
SyncTagsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type SyncTagsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this sync tags forbidden response has a 2xx status code
func (o *SyncTagsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync tags forbidden response has a 3xx status code
func (o *SyncTagsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync tags forbidden response has a 4xx status code
func (o *SyncTagsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync tags forbidden response has a 5xx status code
func (o *SyncTagsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this sync tags forbidden response a status code equal to that given
func (o *SyncTagsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the sync tags forbidden response
func (o *SyncTagsForbidden) Code() int {
	return 403
}

func (o *SyncTagsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsForbidden  %+v", 403, o.Payload)
}

func (o *SyncTagsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsForbidden  %+v", 403, o.Payload)
}

func (o *SyncTagsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SyncTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncTagsNotFound creates a SyncTagsNotFound with default headers values
func NewSyncTagsNotFound() *SyncTagsNotFound {
	return &SyncTagsNotFound{}
}

/*
SyncTagsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type SyncTagsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this sync tags not found response has a 2xx status code
func (o *SyncTagsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync tags not found response has a 3xx status code
func (o *SyncTagsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync tags not found response has a 4xx status code
func (o *SyncTagsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync tags not found response has a 5xx status code
func (o *SyncTagsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this sync tags not found response a status code equal to that given
func (o *SyncTagsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the sync tags not found response
func (o *SyncTagsNotFound) Code() int {
	return 404
}

func (o *SyncTagsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsNotFound  %+v", 404, o.Payload)
}

func (o *SyncTagsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] syncTagsNotFound  %+v", 404, o.Payload)
}

func (o *SyncTagsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *SyncTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncTagsDefault creates a SyncTagsDefault with default headers values
func NewSyncTagsDefault(code int) *SyncTagsDefault {
	return &SyncTagsDefault{
		_statusCode: code,
	}
}

/*
SyncTagsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SyncTagsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this sync tags default response has a 2xx status code
func (o *SyncTagsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this sync tags default response has a 3xx status code
func (o *SyncTagsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this sync tags default response has a 4xx status code
func (o *SyncTagsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this sync tags default response has a 5xx status code
func (o *SyncTagsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this sync tags default response a status code equal to that given
func (o *SyncTagsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the sync tags default response
func (o *SyncTagsDefault) Code() int {
	return o._statusCode
}

func (o *SyncTagsDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] SyncTags default  %+v", o._statusCode, o.Payload)
}

func (o *SyncTagsDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/tags/sync][%d] SyncTags default  %+v", o._statusCode, o.Payload)
}

func (o *SyncTagsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *SyncTagsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
