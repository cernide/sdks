// Code generated by go-swagger; DO NOT EDIT.

package searches_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetSearchReader is a Reader for the GetSearch structure.
type GetSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetSearchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSearchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSearchOK creates a GetSearchOK with default headers values
func NewGetSearchOK() *GetSearchOK {
	return &GetSearchOK{}
}

/*
GetSearchOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetSearchOK struct {
	Payload *service_model.V1Search
}

// IsSuccess returns true when this get search o k response has a 2xx status code
func (o *GetSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get search o k response has a 3xx status code
func (o *GetSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search o k response has a 4xx status code
func (o *GetSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get search o k response has a 5xx status code
func (o *GetSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get search o k response a status code equal to that given
func (o *GetSearchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get search o k response
func (o *GetSearchOK) Code() int {
	return 200
}

func (o *GetSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchOK  %+v", 200, o.Payload)
}

func (o *GetSearchOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchOK  %+v", 200, o.Payload)
}

func (o *GetSearchOK) GetPayload() *service_model.V1Search {
	return o.Payload
}

func (o *GetSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Search)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchNoContent creates a GetSearchNoContent with default headers values
func NewGetSearchNoContent() *GetSearchNoContent {
	return &GetSearchNoContent{}
}

/*
GetSearchNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetSearchNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get search no content response has a 2xx status code
func (o *GetSearchNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get search no content response has a 3xx status code
func (o *GetSearchNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search no content response has a 4xx status code
func (o *GetSearchNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get search no content response has a 5xx status code
func (o *GetSearchNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get search no content response a status code equal to that given
func (o *GetSearchNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get search no content response
func (o *GetSearchNoContent) Code() int {
	return 204
}

func (o *GetSearchNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchNoContent  %+v", 204, o.Payload)
}

func (o *GetSearchNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchNoContent  %+v", 204, o.Payload)
}

func (o *GetSearchNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSearchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchForbidden creates a GetSearchForbidden with default headers values
func NewGetSearchForbidden() *GetSearchForbidden {
	return &GetSearchForbidden{}
}

/*
GetSearchForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetSearchForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get search forbidden response has a 2xx status code
func (o *GetSearchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search forbidden response has a 3xx status code
func (o *GetSearchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search forbidden response has a 4xx status code
func (o *GetSearchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search forbidden response has a 5xx status code
func (o *GetSearchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get search forbidden response a status code equal to that given
func (o *GetSearchForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get search forbidden response
func (o *GetSearchForbidden) Code() int {
	return 403
}

func (o *GetSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetSearchForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetSearchForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchNotFound creates a GetSearchNotFound with default headers values
func NewGetSearchNotFound() *GetSearchNotFound {
	return &GetSearchNotFound{}
}

/*
GetSearchNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetSearchNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get search not found response has a 2xx status code
func (o *GetSearchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search not found response has a 3xx status code
func (o *GetSearchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search not found response has a 4xx status code
func (o *GetSearchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search not found response has a 5xx status code
func (o *GetSearchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get search not found response a status code equal to that given
func (o *GetSearchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get search not found response
func (o *GetSearchNotFound) Code() int {
	return 404
}

func (o *GetSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchNotFound  %+v", 404, o.Payload)
}

func (o *GetSearchNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] getSearchNotFound  %+v", 404, o.Payload)
}

func (o *GetSearchNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchDefault creates a GetSearchDefault with default headers values
func NewGetSearchDefault(code int) *GetSearchDefault {
	return &GetSearchDefault{
		_statusCode: code,
	}
}

/*
GetSearchDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetSearchDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get search default response has a 2xx status code
func (o *GetSearchDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get search default response has a 3xx status code
func (o *GetSearchDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get search default response has a 4xx status code
func (o *GetSearchDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get search default response has a 5xx status code
func (o *GetSearchDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get search default response a status code equal to that given
func (o *GetSearchDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get search default response
func (o *GetSearchDefault) Code() int {
	return o._statusCode
}

func (o *GetSearchDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] GetSearch default  %+v", o._statusCode, o.Payload)
}

func (o *GetSearchDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] GetSearch default  %+v", o._statusCode, o.Payload)
}

func (o *GetSearchDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetSearchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
