// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package dashboards_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListDashboardsReader is a Reader for the ListDashboards structure.
type ListDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListDashboardsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListDashboardsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDashboardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListDashboardsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListDashboardsOK creates a ListDashboardsOK with default headers values
func NewListDashboardsOK() *ListDashboardsOK {
	return &ListDashboardsOK{}
}

/*
ListDashboardsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListDashboardsOK struct {
	Payload *service_model.V1ListDashboardsResponse
}

// IsSuccess returns true when this list dashboards o k response has a 2xx status code
func (o *ListDashboardsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list dashboards o k response has a 3xx status code
func (o *ListDashboardsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list dashboards o k response has a 4xx status code
func (o *ListDashboardsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list dashboards o k response has a 5xx status code
func (o *ListDashboardsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list dashboards o k response a status code equal to that given
func (o *ListDashboardsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list dashboards o k response
func (o *ListDashboardsOK) Code() int {
	return 200
}

func (o *ListDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsOK  %+v", 200, o.Payload)
}

func (o *ListDashboardsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsOK  %+v", 200, o.Payload)
}

func (o *ListDashboardsOK) GetPayload() *service_model.V1ListDashboardsResponse {
	return o.Payload
}

func (o *ListDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListDashboardsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardsNoContent creates a ListDashboardsNoContent with default headers values
func NewListDashboardsNoContent() *ListDashboardsNoContent {
	return &ListDashboardsNoContent{}
}

/*
ListDashboardsNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListDashboardsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this list dashboards no content response has a 2xx status code
func (o *ListDashboardsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list dashboards no content response has a 3xx status code
func (o *ListDashboardsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list dashboards no content response has a 4xx status code
func (o *ListDashboardsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list dashboards no content response has a 5xx status code
func (o *ListDashboardsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list dashboards no content response a status code equal to that given
func (o *ListDashboardsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the list dashboards no content response
func (o *ListDashboardsNoContent) Code() int {
	return 204
}

func (o *ListDashboardsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsNoContent  %+v", 204, o.Payload)
}

func (o *ListDashboardsNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsNoContent  %+v", 204, o.Payload)
}

func (o *ListDashboardsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListDashboardsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardsForbidden creates a ListDashboardsForbidden with default headers values
func NewListDashboardsForbidden() *ListDashboardsForbidden {
	return &ListDashboardsForbidden{}
}

/*
ListDashboardsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListDashboardsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this list dashboards forbidden response has a 2xx status code
func (o *ListDashboardsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list dashboards forbidden response has a 3xx status code
func (o *ListDashboardsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list dashboards forbidden response has a 4xx status code
func (o *ListDashboardsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list dashboards forbidden response has a 5xx status code
func (o *ListDashboardsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list dashboards forbidden response a status code equal to that given
func (o *ListDashboardsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list dashboards forbidden response
func (o *ListDashboardsForbidden) Code() int {
	return 403
}

func (o *ListDashboardsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsForbidden  %+v", 403, o.Payload)
}

func (o *ListDashboardsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsForbidden  %+v", 403, o.Payload)
}

func (o *ListDashboardsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListDashboardsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardsNotFound creates a ListDashboardsNotFound with default headers values
func NewListDashboardsNotFound() *ListDashboardsNotFound {
	return &ListDashboardsNotFound{}
}

/*
ListDashboardsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListDashboardsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this list dashboards not found response has a 2xx status code
func (o *ListDashboardsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list dashboards not found response has a 3xx status code
func (o *ListDashboardsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list dashboards not found response has a 4xx status code
func (o *ListDashboardsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list dashboards not found response has a 5xx status code
func (o *ListDashboardsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list dashboards not found response a status code equal to that given
func (o *ListDashboardsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list dashboards not found response
func (o *ListDashboardsNotFound) Code() int {
	return 404
}

func (o *ListDashboardsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *ListDashboardsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] listDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *ListDashboardsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListDashboardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardsDefault creates a ListDashboardsDefault with default headers values
func NewListDashboardsDefault(code int) *ListDashboardsDefault {
	return &ListDashboardsDefault{
		_statusCode: code,
	}
}

/*
ListDashboardsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListDashboardsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this list dashboards default response has a 2xx status code
func (o *ListDashboardsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list dashboards default response has a 3xx status code
func (o *ListDashboardsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list dashboards default response has a 4xx status code
func (o *ListDashboardsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list dashboards default response has a 5xx status code
func (o *ListDashboardsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list dashboards default response a status code equal to that given
func (o *ListDashboardsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list dashboards default response
func (o *ListDashboardsDefault) Code() int {
	return o._statusCode
}

func (o *ListDashboardsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] ListDashboards default  %+v", o._statusCode, o.Payload)
}

func (o *ListDashboardsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/dashboards][%d] ListDashboards default  %+v", o._statusCode, o.Payload)
}

func (o *ListDashboardsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListDashboardsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
