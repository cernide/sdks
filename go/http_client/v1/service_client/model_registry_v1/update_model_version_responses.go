// Copyright 2018-2021 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package model_registry_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// UpdateModelVersionReader is a Reader for the UpdateModelVersion structure.
type UpdateModelVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateModelVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateModelVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateModelVersionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateModelVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateModelVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateModelVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateModelVersionOK creates a UpdateModelVersionOK with default headers values
func NewUpdateModelVersionOK() *UpdateModelVersionOK {
	return &UpdateModelVersionOK{}
}

/* UpdateModelVersionOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateModelVersionOK struct {
	Payload *service_model.V1ModelVersion
}

func (o *UpdateModelVersionOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/registry/{model}/versions/{version.name}][%d] updateModelVersionOK  %+v", 200, o.Payload)
}
func (o *UpdateModelVersionOK) GetPayload() *service_model.V1ModelVersion {
	return o.Payload
}

func (o *UpdateModelVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ModelVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateModelVersionNoContent creates a UpdateModelVersionNoContent with default headers values
func NewUpdateModelVersionNoContent() *UpdateModelVersionNoContent {
	return &UpdateModelVersionNoContent{}
}

/* UpdateModelVersionNoContent describes a response with status code 204, with default header values.

No content.
*/
type UpdateModelVersionNoContent struct {
	Payload interface{}
}

func (o *UpdateModelVersionNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/registry/{model}/versions/{version.name}][%d] updateModelVersionNoContent  %+v", 204, o.Payload)
}
func (o *UpdateModelVersionNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateModelVersionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateModelVersionForbidden creates a UpdateModelVersionForbidden with default headers values
func NewUpdateModelVersionForbidden() *UpdateModelVersionForbidden {
	return &UpdateModelVersionForbidden{}
}

/* UpdateModelVersionForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type UpdateModelVersionForbidden struct {
	Payload interface{}
}

func (o *UpdateModelVersionForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/registry/{model}/versions/{version.name}][%d] updateModelVersionForbidden  %+v", 403, o.Payload)
}
func (o *UpdateModelVersionForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateModelVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateModelVersionNotFound creates a UpdateModelVersionNotFound with default headers values
func NewUpdateModelVersionNotFound() *UpdateModelVersionNotFound {
	return &UpdateModelVersionNotFound{}
}

/* UpdateModelVersionNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type UpdateModelVersionNotFound struct {
	Payload interface{}
}

func (o *UpdateModelVersionNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/registry/{model}/versions/{version.name}][%d] updateModelVersionNotFound  %+v", 404, o.Payload)
}
func (o *UpdateModelVersionNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateModelVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateModelVersionDefault creates a UpdateModelVersionDefault with default headers values
func NewUpdateModelVersionDefault(code int) *UpdateModelVersionDefault {
	return &UpdateModelVersionDefault{
		_statusCode: code,
	}
}

/* UpdateModelVersionDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type UpdateModelVersionDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the update model version default response
func (o *UpdateModelVersionDefault) Code() int {
	return o._statusCode
}

func (o *UpdateModelVersionDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/registry/{model}/versions/{version.name}][%d] UpdateModelVersion default  %+v", o._statusCode, o.Payload)
}
func (o *UpdateModelVersionDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UpdateModelVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
