// Code generated by go-swagger; DO NOT EDIT.

package auth_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// SignupReader is a Reader for the Signup structure.
type SignupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SignupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSignupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSignupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSignupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSignupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSignupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSignupOK creates a SignupOK with default headers values
func NewSignupOK() *SignupOK {
	return &SignupOK{}
}

/*
SignupOK describes a response with status code 200, with default header values.

A successful response.
*/
type SignupOK struct {
	Payload *service_model.V1Auth
}

// IsSuccess returns true when this signup o k response has a 2xx status code
func (o *SignupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this signup o k response has a 3xx status code
func (o *SignupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this signup o k response has a 4xx status code
func (o *SignupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this signup o k response has a 5xx status code
func (o *SignupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this signup o k response a status code equal to that given
func (o *SignupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the signup o k response
func (o *SignupOK) Code() int {
	return 200
}

func (o *SignupOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupOK  %+v", 200, o.Payload)
}

func (o *SignupOK) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupOK  %+v", 200, o.Payload)
}

func (o *SignupOK) GetPayload() *service_model.V1Auth {
	return o.Payload
}

func (o *SignupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Auth)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSignupNoContent creates a SignupNoContent with default headers values
func NewSignupNoContent() *SignupNoContent {
	return &SignupNoContent{}
}

/*
SignupNoContent describes a response with status code 204, with default header values.

No content.
*/
type SignupNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this signup no content response has a 2xx status code
func (o *SignupNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this signup no content response has a 3xx status code
func (o *SignupNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this signup no content response has a 4xx status code
func (o *SignupNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this signup no content response has a 5xx status code
func (o *SignupNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this signup no content response a status code equal to that given
func (o *SignupNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the signup no content response
func (o *SignupNoContent) Code() int {
	return 204
}

func (o *SignupNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupNoContent  %+v", 204, o.Payload)
}

func (o *SignupNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupNoContent  %+v", 204, o.Payload)
}

func (o *SignupNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *SignupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSignupForbidden creates a SignupForbidden with default headers values
func NewSignupForbidden() *SignupForbidden {
	return &SignupForbidden{}
}

/*
SignupForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type SignupForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this signup forbidden response has a 2xx status code
func (o *SignupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this signup forbidden response has a 3xx status code
func (o *SignupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this signup forbidden response has a 4xx status code
func (o *SignupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this signup forbidden response has a 5xx status code
func (o *SignupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this signup forbidden response a status code equal to that given
func (o *SignupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the signup forbidden response
func (o *SignupForbidden) Code() int {
	return 403
}

func (o *SignupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupForbidden  %+v", 403, o.Payload)
}

func (o *SignupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupForbidden  %+v", 403, o.Payload)
}

func (o *SignupForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SignupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSignupNotFound creates a SignupNotFound with default headers values
func NewSignupNotFound() *SignupNotFound {
	return &SignupNotFound{}
}

/*
SignupNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type SignupNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this signup not found response has a 2xx status code
func (o *SignupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this signup not found response has a 3xx status code
func (o *SignupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this signup not found response has a 4xx status code
func (o *SignupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this signup not found response has a 5xx status code
func (o *SignupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this signup not found response a status code equal to that given
func (o *SignupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the signup not found response
func (o *SignupNotFound) Code() int {
	return 404
}

func (o *SignupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupNotFound  %+v", 404, o.Payload)
}

func (o *SignupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] signupNotFound  %+v", 404, o.Payload)
}

func (o *SignupNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *SignupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSignupDefault creates a SignupDefault with default headers values
func NewSignupDefault(code int) *SignupDefault {
	return &SignupDefault{
		_statusCode: code,
	}
}

/*
SignupDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SignupDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this signup default response has a 2xx status code
func (o *SignupDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this signup default response has a 3xx status code
func (o *SignupDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this signup default response has a 4xx status code
func (o *SignupDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this signup default response has a 5xx status code
func (o *SignupDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this signup default response a status code equal to that given
func (o *SignupDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the signup default response
func (o *SignupDefault) Code() int {
	return o._statusCode
}

func (o *SignupDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] Signup default  %+v", o._statusCode, o.Payload)
}

func (o *SignupDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/signup][%d] Signup default  %+v", o._statusCode, o.Payload)
}

func (o *SignupDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *SignupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
