// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package service_accounts_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListServiceAccountsReader is a Reader for the ListServiceAccounts structure.
type ListServiceAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServiceAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServiceAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListServiceAccountsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListServiceAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListServiceAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListServiceAccountsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListServiceAccountsOK creates a ListServiceAccountsOK with default headers values
func NewListServiceAccountsOK() *ListServiceAccountsOK {
	return &ListServiceAccountsOK{}
}

/* ListServiceAccountsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListServiceAccountsOK struct {
	Payload *service_model.V1ListServiceAccountsResponse
}

// IsSuccess returns true when this list service accounts o k response has a 2xx status code
func (o *ListServiceAccountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list service accounts o k response has a 3xx status code
func (o *ListServiceAccountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service accounts o k response has a 4xx status code
func (o *ListServiceAccountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list service accounts o k response has a 5xx status code
func (o *ListServiceAccountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list service accounts o k response a status code equal to that given
func (o *ListServiceAccountsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListServiceAccountsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsOK  %+v", 200, o.Payload)
}

func (o *ListServiceAccountsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsOK  %+v", 200, o.Payload)
}

func (o *ListServiceAccountsOK) GetPayload() *service_model.V1ListServiceAccountsResponse {
	return o.Payload
}

func (o *ListServiceAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListServiceAccountsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServiceAccountsNoContent creates a ListServiceAccountsNoContent with default headers values
func NewListServiceAccountsNoContent() *ListServiceAccountsNoContent {
	return &ListServiceAccountsNoContent{}
}

/* ListServiceAccountsNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListServiceAccountsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this list service accounts no content response has a 2xx status code
func (o *ListServiceAccountsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list service accounts no content response has a 3xx status code
func (o *ListServiceAccountsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service accounts no content response has a 4xx status code
func (o *ListServiceAccountsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list service accounts no content response has a 5xx status code
func (o *ListServiceAccountsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list service accounts no content response a status code equal to that given
func (o *ListServiceAccountsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ListServiceAccountsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsNoContent  %+v", 204, o.Payload)
}

func (o *ListServiceAccountsNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsNoContent  %+v", 204, o.Payload)
}

func (o *ListServiceAccountsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListServiceAccountsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServiceAccountsForbidden creates a ListServiceAccountsForbidden with default headers values
func NewListServiceAccountsForbidden() *ListServiceAccountsForbidden {
	return &ListServiceAccountsForbidden{}
}

/* ListServiceAccountsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListServiceAccountsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this list service accounts forbidden response has a 2xx status code
func (o *ListServiceAccountsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list service accounts forbidden response has a 3xx status code
func (o *ListServiceAccountsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service accounts forbidden response has a 4xx status code
func (o *ListServiceAccountsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list service accounts forbidden response has a 5xx status code
func (o *ListServiceAccountsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list service accounts forbidden response a status code equal to that given
func (o *ListServiceAccountsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListServiceAccountsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsForbidden  %+v", 403, o.Payload)
}

func (o *ListServiceAccountsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsForbidden  %+v", 403, o.Payload)
}

func (o *ListServiceAccountsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListServiceAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServiceAccountsNotFound creates a ListServiceAccountsNotFound with default headers values
func NewListServiceAccountsNotFound() *ListServiceAccountsNotFound {
	return &ListServiceAccountsNotFound{}
}

/* ListServiceAccountsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListServiceAccountsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this list service accounts not found response has a 2xx status code
func (o *ListServiceAccountsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list service accounts not found response has a 3xx status code
func (o *ListServiceAccountsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service accounts not found response has a 4xx status code
func (o *ListServiceAccountsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list service accounts not found response has a 5xx status code
func (o *ListServiceAccountsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list service accounts not found response a status code equal to that given
func (o *ListServiceAccountsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListServiceAccountsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsNotFound  %+v", 404, o.Payload)
}

func (o *ListServiceAccountsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] listServiceAccountsNotFound  %+v", 404, o.Payload)
}

func (o *ListServiceAccountsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListServiceAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServiceAccountsDefault creates a ListServiceAccountsDefault with default headers values
func NewListServiceAccountsDefault(code int) *ListServiceAccountsDefault {
	return &ListServiceAccountsDefault{
		_statusCode: code,
	}
}

/* ListServiceAccountsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListServiceAccountsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list service accounts default response
func (o *ListServiceAccountsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list service accounts default response has a 2xx status code
func (o *ListServiceAccountsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list service accounts default response has a 3xx status code
func (o *ListServiceAccountsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list service accounts default response has a 4xx status code
func (o *ListServiceAccountsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list service accounts default response has a 5xx status code
func (o *ListServiceAccountsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list service accounts default response a status code equal to that given
func (o *ListServiceAccountsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListServiceAccountsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] ListServiceAccounts default  %+v", o._statusCode, o.Payload)
}

func (o *ListServiceAccountsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/sa][%d] ListServiceAccounts default  %+v", o._statusCode, o.Payload)
}

func (o *ListServiceAccountsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListServiceAccountsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
