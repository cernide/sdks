// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package service_accounts_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// UpdateServiceAccountReader is a Reader for the UpdateServiceAccount structure.
type UpdateServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateServiceAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateServiceAccountDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateServiceAccountOK creates a UpdateServiceAccountOK with default headers values
func NewUpdateServiceAccountOK() *UpdateServiceAccountOK {
	return &UpdateServiceAccountOK{}
}

/* UpdateServiceAccountOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateServiceAccountOK struct {
	Payload *service_model.V1ServiceAccount
}

func (o *UpdateServiceAccountOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/sa/{sa.uuid}][%d] updateServiceAccountOK  %+v", 200, o.Payload)
}
func (o *UpdateServiceAccountOK) GetPayload() *service_model.V1ServiceAccount {
	return o.Payload
}

func (o *UpdateServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ServiceAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceAccountNoContent creates a UpdateServiceAccountNoContent with default headers values
func NewUpdateServiceAccountNoContent() *UpdateServiceAccountNoContent {
	return &UpdateServiceAccountNoContent{}
}

/* UpdateServiceAccountNoContent describes a response with status code 204, with default header values.

No content.
*/
type UpdateServiceAccountNoContent struct {
	Payload interface{}
}

func (o *UpdateServiceAccountNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/sa/{sa.uuid}][%d] updateServiceAccountNoContent  %+v", 204, o.Payload)
}
func (o *UpdateServiceAccountNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateServiceAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceAccountForbidden creates a UpdateServiceAccountForbidden with default headers values
func NewUpdateServiceAccountForbidden() *UpdateServiceAccountForbidden {
	return &UpdateServiceAccountForbidden{}
}

/* UpdateServiceAccountForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type UpdateServiceAccountForbidden struct {
	Payload interface{}
}

func (o *UpdateServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/sa/{sa.uuid}][%d] updateServiceAccountForbidden  %+v", 403, o.Payload)
}
func (o *UpdateServiceAccountForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceAccountNotFound creates a UpdateServiceAccountNotFound with default headers values
func NewUpdateServiceAccountNotFound() *UpdateServiceAccountNotFound {
	return &UpdateServiceAccountNotFound{}
}

/* UpdateServiceAccountNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type UpdateServiceAccountNotFound struct {
	Payload interface{}
}

func (o *UpdateServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/sa/{sa.uuid}][%d] updateServiceAccountNotFound  %+v", 404, o.Payload)
}
func (o *UpdateServiceAccountNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceAccountDefault creates a UpdateServiceAccountDefault with default headers values
func NewUpdateServiceAccountDefault(code int) *UpdateServiceAccountDefault {
	return &UpdateServiceAccountDefault{
		_statusCode: code,
	}
}

/* UpdateServiceAccountDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type UpdateServiceAccountDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the update service account default response
func (o *UpdateServiceAccountDefault) Code() int {
	return o._statusCode
}

func (o *UpdateServiceAccountDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/sa/{sa.uuid}][%d] UpdateServiceAccount default  %+v", o._statusCode, o.Payload)
}
func (o *UpdateServiceAccountDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UpdateServiceAccountDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
