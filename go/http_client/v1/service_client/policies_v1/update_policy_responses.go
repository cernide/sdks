// Code generated by go-swagger; DO NOT EDIT.

package policies_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// UpdatePolicyReader is a Reader for the UpdatePolicy structure.
type UpdatePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdatePolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdatePolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdatePolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdatePolicyOK creates a UpdatePolicyOK with default headers values
func NewUpdatePolicyOK() *UpdatePolicyOK {
	return &UpdatePolicyOK{}
}

/*
UpdatePolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdatePolicyOK struct {
	Payload *service_model.V1Policy
}

// IsSuccess returns true when this update policy o k response has a 2xx status code
func (o *UpdatePolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy o k response has a 3xx status code
func (o *UpdatePolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy o k response has a 4xx status code
func (o *UpdatePolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy o k response has a 5xx status code
func (o *UpdatePolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy o k response a status code equal to that given
func (o *UpdatePolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy o k response
func (o *UpdatePolicyOK) Code() int {
	return 200
}

func (o *UpdatePolicyOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyOK  %+v", 200, o.Payload)
}

func (o *UpdatePolicyOK) String() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyOK  %+v", 200, o.Payload)
}

func (o *UpdatePolicyOK) GetPayload() *service_model.V1Policy {
	return o.Payload
}

func (o *UpdatePolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Policy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyNoContent creates a UpdatePolicyNoContent with default headers values
func NewUpdatePolicyNoContent() *UpdatePolicyNoContent {
	return &UpdatePolicyNoContent{}
}

/*
UpdatePolicyNoContent describes a response with status code 204, with default header values.

No content.
*/
type UpdatePolicyNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this update policy no content response has a 2xx status code
func (o *UpdatePolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy no content response has a 3xx status code
func (o *UpdatePolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy no content response has a 4xx status code
func (o *UpdatePolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy no content response has a 5xx status code
func (o *UpdatePolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy no content response a status code equal to that given
func (o *UpdatePolicyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update policy no content response
func (o *UpdatePolicyNoContent) Code() int {
	return 204
}

func (o *UpdatePolicyNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyNoContent  %+v", 204, o.Payload)
}

func (o *UpdatePolicyNoContent) String() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyNoContent  %+v", 204, o.Payload)
}

func (o *UpdatePolicyNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdatePolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyForbidden creates a UpdatePolicyForbidden with default headers values
func NewUpdatePolicyForbidden() *UpdatePolicyForbidden {
	return &UpdatePolicyForbidden{}
}

/*
UpdatePolicyForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type UpdatePolicyForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this update policy forbidden response has a 2xx status code
func (o *UpdatePolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy forbidden response has a 3xx status code
func (o *UpdatePolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy forbidden response has a 4xx status code
func (o *UpdatePolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy forbidden response has a 5xx status code
func (o *UpdatePolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy forbidden response a status code equal to that given
func (o *UpdatePolicyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update policy forbidden response
func (o *UpdatePolicyForbidden) Code() int {
	return 403
}

func (o *UpdatePolicyForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePolicyForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePolicyForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdatePolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyNotFound creates a UpdatePolicyNotFound with default headers values
func NewUpdatePolicyNotFound() *UpdatePolicyNotFound {
	return &UpdatePolicyNotFound{}
}

/*
UpdatePolicyNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type UpdatePolicyNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this update policy not found response has a 2xx status code
func (o *UpdatePolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy not found response has a 3xx status code
func (o *UpdatePolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy not found response has a 4xx status code
func (o *UpdatePolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy not found response has a 5xx status code
func (o *UpdatePolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy not found response a status code equal to that given
func (o *UpdatePolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update policy not found response
func (o *UpdatePolicyNotFound) Code() int {
	return 404
}

func (o *UpdatePolicyNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePolicyNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] updatePolicyNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePolicyNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdatePolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyDefault creates a UpdatePolicyDefault with default headers values
func NewUpdatePolicyDefault(code int) *UpdatePolicyDefault {
	return &UpdatePolicyDefault{
		_statusCode: code,
	}
}

/*
UpdatePolicyDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type UpdatePolicyDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this update policy default response has a 2xx status code
func (o *UpdatePolicyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update policy default response has a 3xx status code
func (o *UpdatePolicyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update policy default response has a 4xx status code
func (o *UpdatePolicyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update policy default response has a 5xx status code
func (o *UpdatePolicyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update policy default response a status code equal to that given
func (o *UpdatePolicyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update policy default response
func (o *UpdatePolicyDefault) Code() int {
	return o._statusCode
}

func (o *UpdatePolicyDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] UpdatePolicy default  %+v", o._statusCode, o.Payload)
}

func (o *UpdatePolicyDefault) String() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/policies/{policy.uuid}][%d] UpdatePolicy default  %+v", o._statusCode, o.Payload)
}

func (o *UpdatePolicyDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UpdatePolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
