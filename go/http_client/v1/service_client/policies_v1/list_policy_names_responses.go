// Code generated by go-swagger; DO NOT EDIT.

package policies_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/v2/go/http_client/v1/service_model"
)

// ListPolicyNamesReader is a Reader for the ListPolicyNames structure.
type ListPolicyNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPolicyNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPolicyNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListPolicyNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListPolicyNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPolicyNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListPolicyNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListPolicyNamesOK creates a ListPolicyNamesOK with default headers values
func NewListPolicyNamesOK() *ListPolicyNamesOK {
	return &ListPolicyNamesOK{}
}

/*
ListPolicyNamesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListPolicyNamesOK struct {
	Payload *service_model.V1ListPoliciesResponse
}

// IsSuccess returns true when this list policy names o k response has a 2xx status code
func (o *ListPolicyNamesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list policy names o k response has a 3xx status code
func (o *ListPolicyNamesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy names o k response has a 4xx status code
func (o *ListPolicyNamesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list policy names o k response has a 5xx status code
func (o *ListPolicyNamesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy names o k response a status code equal to that given
func (o *ListPolicyNamesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list policy names o k response
func (o *ListPolicyNamesOK) Code() int {
	return 200
}

func (o *ListPolicyNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesOK  %+v", 200, o.Payload)
}

func (o *ListPolicyNamesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesOK  %+v", 200, o.Payload)
}

func (o *ListPolicyNamesOK) GetPayload() *service_model.V1ListPoliciesResponse {
	return o.Payload
}

func (o *ListPolicyNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListPoliciesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPolicyNamesNoContent creates a ListPolicyNamesNoContent with default headers values
func NewListPolicyNamesNoContent() *ListPolicyNamesNoContent {
	return &ListPolicyNamesNoContent{}
}

/*
ListPolicyNamesNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListPolicyNamesNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this list policy names no content response has a 2xx status code
func (o *ListPolicyNamesNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list policy names no content response has a 3xx status code
func (o *ListPolicyNamesNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy names no content response has a 4xx status code
func (o *ListPolicyNamesNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list policy names no content response has a 5xx status code
func (o *ListPolicyNamesNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy names no content response a status code equal to that given
func (o *ListPolicyNamesNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the list policy names no content response
func (o *ListPolicyNamesNoContent) Code() int {
	return 204
}

func (o *ListPolicyNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListPolicyNamesNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListPolicyNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListPolicyNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPolicyNamesForbidden creates a ListPolicyNamesForbidden with default headers values
func NewListPolicyNamesForbidden() *ListPolicyNamesForbidden {
	return &ListPolicyNamesForbidden{}
}

/*
ListPolicyNamesForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListPolicyNamesForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this list policy names forbidden response has a 2xx status code
func (o *ListPolicyNamesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list policy names forbidden response has a 3xx status code
func (o *ListPolicyNamesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy names forbidden response has a 4xx status code
func (o *ListPolicyNamesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list policy names forbidden response has a 5xx status code
func (o *ListPolicyNamesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy names forbidden response a status code equal to that given
func (o *ListPolicyNamesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list policy names forbidden response
func (o *ListPolicyNamesForbidden) Code() int {
	return 403
}

func (o *ListPolicyNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListPolicyNamesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListPolicyNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListPolicyNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPolicyNamesNotFound creates a ListPolicyNamesNotFound with default headers values
func NewListPolicyNamesNotFound() *ListPolicyNamesNotFound {
	return &ListPolicyNamesNotFound{}
}

/*
ListPolicyNamesNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListPolicyNamesNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this list policy names not found response has a 2xx status code
func (o *ListPolicyNamesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list policy names not found response has a 3xx status code
func (o *ListPolicyNamesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy names not found response has a 4xx status code
func (o *ListPolicyNamesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list policy names not found response has a 5xx status code
func (o *ListPolicyNamesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy names not found response a status code equal to that given
func (o *ListPolicyNamesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list policy names not found response
func (o *ListPolicyNamesNotFound) Code() int {
	return 404
}

func (o *ListPolicyNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListPolicyNamesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] listPolicyNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListPolicyNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListPolicyNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPolicyNamesDefault creates a ListPolicyNamesDefault with default headers values
func NewListPolicyNamesDefault(code int) *ListPolicyNamesDefault {
	return &ListPolicyNamesDefault{
		_statusCode: code,
	}
}

/*
ListPolicyNamesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListPolicyNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this list policy names default response has a 2xx status code
func (o *ListPolicyNamesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list policy names default response has a 3xx status code
func (o *ListPolicyNamesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list policy names default response has a 4xx status code
func (o *ListPolicyNamesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list policy names default response has a 5xx status code
func (o *ListPolicyNamesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list policy names default response a status code equal to that given
func (o *ListPolicyNamesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list policy names default response
func (o *ListPolicyNamesDefault) Code() int {
	return o._statusCode
}

func (o *ListPolicyNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] ListPolicyNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListPolicyNamesDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/policies/names][%d] ListPolicyNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListPolicyNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListPolicyNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
