// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ImpersonateTokenReader is a Reader for the ImpersonateToken structure.
type ImpersonateTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImpersonateTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImpersonateTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewImpersonateTokenNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewImpersonateTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImpersonateTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewImpersonateTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewImpersonateTokenOK creates a ImpersonateTokenOK with default headers values
func NewImpersonateTokenOK() *ImpersonateTokenOK {
	return &ImpersonateTokenOK{}
}

/* ImpersonateTokenOK describes a response with status code 200, with default header values.

A successful response.
*/
type ImpersonateTokenOK struct {
	Payload *service_model.V1Auth
}

func (o *ImpersonateTokenOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/impersonate][%d] impersonateTokenOK  %+v", 200, o.Payload)
}
func (o *ImpersonateTokenOK) GetPayload() *service_model.V1Auth {
	return o.Payload
}

func (o *ImpersonateTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Auth)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonateTokenNoContent creates a ImpersonateTokenNoContent with default headers values
func NewImpersonateTokenNoContent() *ImpersonateTokenNoContent {
	return &ImpersonateTokenNoContent{}
}

/* ImpersonateTokenNoContent describes a response with status code 204, with default header values.

No content.
*/
type ImpersonateTokenNoContent struct {
	Payload interface{}
}

func (o *ImpersonateTokenNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/impersonate][%d] impersonateTokenNoContent  %+v", 204, o.Payload)
}
func (o *ImpersonateTokenNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ImpersonateTokenNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonateTokenForbidden creates a ImpersonateTokenForbidden with default headers values
func NewImpersonateTokenForbidden() *ImpersonateTokenForbidden {
	return &ImpersonateTokenForbidden{}
}

/* ImpersonateTokenForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ImpersonateTokenForbidden struct {
	Payload interface{}
}

func (o *ImpersonateTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/impersonate][%d] impersonateTokenForbidden  %+v", 403, o.Payload)
}
func (o *ImpersonateTokenForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ImpersonateTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonateTokenNotFound creates a ImpersonateTokenNotFound with default headers values
func NewImpersonateTokenNotFound() *ImpersonateTokenNotFound {
	return &ImpersonateTokenNotFound{}
}

/* ImpersonateTokenNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ImpersonateTokenNotFound struct {
	Payload interface{}
}

func (o *ImpersonateTokenNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/impersonate][%d] impersonateTokenNotFound  %+v", 404, o.Payload)
}
func (o *ImpersonateTokenNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ImpersonateTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonateTokenDefault creates a ImpersonateTokenDefault with default headers values
func NewImpersonateTokenDefault(code int) *ImpersonateTokenDefault {
	return &ImpersonateTokenDefault{
		_statusCode: code,
	}
}

/* ImpersonateTokenDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ImpersonateTokenDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the impersonate token default response
func (o *ImpersonateTokenDefault) Code() int {
	return o._statusCode
}

func (o *ImpersonateTokenDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/impersonate][%d] ImpersonateToken default  %+v", o._statusCode, o.Payload)
}
func (o *ImpersonateTokenDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ImpersonateTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
