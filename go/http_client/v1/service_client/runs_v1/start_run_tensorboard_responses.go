// Copyright 2018-2021 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// StartRunTensorboardReader is a Reader for the StartRunTensorboard structure.
type StartRunTensorboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartRunTensorboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartRunTensorboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewStartRunTensorboardNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewStartRunTensorboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartRunTensorboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStartRunTensorboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStartRunTensorboardOK creates a StartRunTensorboardOK with default headers values
func NewStartRunTensorboardOK() *StartRunTensorboardOK {
	return &StartRunTensorboardOK{}
}

/* StartRunTensorboardOK describes a response with status code 200, with default header values.

A successful response.
*/
type StartRunTensorboardOK struct {
}

func (o *StartRunTensorboardOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/start][%d] startRunTensorboardOK ", 200)
}

func (o *StartRunTensorboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartRunTensorboardNoContent creates a StartRunTensorboardNoContent with default headers values
func NewStartRunTensorboardNoContent() *StartRunTensorboardNoContent {
	return &StartRunTensorboardNoContent{}
}

/* StartRunTensorboardNoContent describes a response with status code 204, with default header values.

No content.
*/
type StartRunTensorboardNoContent struct {
	Payload interface{}
}

func (o *StartRunTensorboardNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/start][%d] startRunTensorboardNoContent  %+v", 204, o.Payload)
}
func (o *StartRunTensorboardNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *StartRunTensorboardNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartRunTensorboardForbidden creates a StartRunTensorboardForbidden with default headers values
func NewStartRunTensorboardForbidden() *StartRunTensorboardForbidden {
	return &StartRunTensorboardForbidden{}
}

/* StartRunTensorboardForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type StartRunTensorboardForbidden struct {
	Payload interface{}
}

func (o *StartRunTensorboardForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/start][%d] startRunTensorboardForbidden  %+v", 403, o.Payload)
}
func (o *StartRunTensorboardForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *StartRunTensorboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartRunTensorboardNotFound creates a StartRunTensorboardNotFound with default headers values
func NewStartRunTensorboardNotFound() *StartRunTensorboardNotFound {
	return &StartRunTensorboardNotFound{}
}

/* StartRunTensorboardNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type StartRunTensorboardNotFound struct {
	Payload interface{}
}

func (o *StartRunTensorboardNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/start][%d] startRunTensorboardNotFound  %+v", 404, o.Payload)
}
func (o *StartRunTensorboardNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *StartRunTensorboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartRunTensorboardDefault creates a StartRunTensorboardDefault with default headers values
func NewStartRunTensorboardDefault(code int) *StartRunTensorboardDefault {
	return &StartRunTensorboardDefault{
		_statusCode: code,
	}
}

/* StartRunTensorboardDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type StartRunTensorboardDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the start run tensorboard default response
func (o *StartRunTensorboardDefault) Code() int {
	return o._statusCode
}

func (o *StartRunTensorboardDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/start][%d] StartRunTensorboard default  %+v", o._statusCode, o.Payload)
}
func (o *StartRunTensorboardDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *StartRunTensorboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
