// Copyright 2018-2021 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetRunArtifactsReader is a Reader for the GetRunArtifacts structure.
type GetRunArtifactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunArtifactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunArtifactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetRunArtifactsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRunArtifactsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunArtifactsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRunArtifactsOK creates a GetRunArtifactsOK with default headers values
func NewGetRunArtifactsOK() *GetRunArtifactsOK {
	return &GetRunArtifactsOK{}
}

/* GetRunArtifactsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetRunArtifactsOK struct {
	Payload string
}

func (o *GetRunArtifactsOK) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts][%d] getRunArtifactsOK  %+v", 200, o.Payload)
}
func (o *GetRunArtifactsOK) GetPayload() string {
	return o.Payload
}

func (o *GetRunArtifactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsNoContent creates a GetRunArtifactsNoContent with default headers values
func NewGetRunArtifactsNoContent() *GetRunArtifactsNoContent {
	return &GetRunArtifactsNoContent{}
}

/* GetRunArtifactsNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetRunArtifactsNoContent struct {
	Payload interface{}
}

func (o *GetRunArtifactsNoContent) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts][%d] getRunArtifactsNoContent  %+v", 204, o.Payload)
}
func (o *GetRunArtifactsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunArtifactsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsForbidden creates a GetRunArtifactsForbidden with default headers values
func NewGetRunArtifactsForbidden() *GetRunArtifactsForbidden {
	return &GetRunArtifactsForbidden{}
}

/* GetRunArtifactsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetRunArtifactsForbidden struct {
	Payload interface{}
}

func (o *GetRunArtifactsForbidden) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts][%d] getRunArtifactsForbidden  %+v", 403, o.Payload)
}
func (o *GetRunArtifactsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunArtifactsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsNotFound creates a GetRunArtifactsNotFound with default headers values
func NewGetRunArtifactsNotFound() *GetRunArtifactsNotFound {
	return &GetRunArtifactsNotFound{}
}

/* GetRunArtifactsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetRunArtifactsNotFound struct {
	Payload interface{}
}

func (o *GetRunArtifactsNotFound) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts][%d] getRunArtifactsNotFound  %+v", 404, o.Payload)
}
func (o *GetRunArtifactsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunArtifactsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
