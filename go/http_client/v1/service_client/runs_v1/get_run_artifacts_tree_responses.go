// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/go/http_client/v1/service_model"
)

// GetRunArtifactsTreeReader is a Reader for the GetRunArtifactsTree structure.
type GetRunArtifactsTreeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunArtifactsTreeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunArtifactsTreeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetRunArtifactsTreeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRunArtifactsTreeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunArtifactsTreeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetRunArtifactsTreeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRunArtifactsTreeOK creates a GetRunArtifactsTreeOK with default headers values
func NewGetRunArtifactsTreeOK() *GetRunArtifactsTreeOK {
	return &GetRunArtifactsTreeOK{}
}

/*
GetRunArtifactsTreeOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetRunArtifactsTreeOK struct {
	Payload *service_model.V1ArtifactTree
}

// IsSuccess returns true when this get run artifacts tree o k response has a 2xx status code
func (o *GetRunArtifactsTreeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get run artifacts tree o k response has a 3xx status code
func (o *GetRunArtifactsTreeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run artifacts tree o k response has a 4xx status code
func (o *GetRunArtifactsTreeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get run artifacts tree o k response has a 5xx status code
func (o *GetRunArtifactsTreeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get run artifacts tree o k response a status code equal to that given
func (o *GetRunArtifactsTreeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get run artifacts tree o k response
func (o *GetRunArtifactsTreeOK) Code() int {
	return 200
}

func (o *GetRunArtifactsTreeOK) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeOK  %+v", 200, o.Payload)
}

func (o *GetRunArtifactsTreeOK) String() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeOK  %+v", 200, o.Payload)
}

func (o *GetRunArtifactsTreeOK) GetPayload() *service_model.V1ArtifactTree {
	return o.Payload
}

func (o *GetRunArtifactsTreeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ArtifactTree)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsTreeNoContent creates a GetRunArtifactsTreeNoContent with default headers values
func NewGetRunArtifactsTreeNoContent() *GetRunArtifactsTreeNoContent {
	return &GetRunArtifactsTreeNoContent{}
}

/*
GetRunArtifactsTreeNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetRunArtifactsTreeNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get run artifacts tree no content response has a 2xx status code
func (o *GetRunArtifactsTreeNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get run artifacts tree no content response has a 3xx status code
func (o *GetRunArtifactsTreeNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run artifacts tree no content response has a 4xx status code
func (o *GetRunArtifactsTreeNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get run artifacts tree no content response has a 5xx status code
func (o *GetRunArtifactsTreeNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get run artifacts tree no content response a status code equal to that given
func (o *GetRunArtifactsTreeNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get run artifacts tree no content response
func (o *GetRunArtifactsTreeNoContent) Code() int {
	return 204
}

func (o *GetRunArtifactsTreeNoContent) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeNoContent  %+v", 204, o.Payload)
}

func (o *GetRunArtifactsTreeNoContent) String() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeNoContent  %+v", 204, o.Payload)
}

func (o *GetRunArtifactsTreeNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunArtifactsTreeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsTreeForbidden creates a GetRunArtifactsTreeForbidden with default headers values
func NewGetRunArtifactsTreeForbidden() *GetRunArtifactsTreeForbidden {
	return &GetRunArtifactsTreeForbidden{}
}

/*
GetRunArtifactsTreeForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetRunArtifactsTreeForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get run artifacts tree forbidden response has a 2xx status code
func (o *GetRunArtifactsTreeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get run artifacts tree forbidden response has a 3xx status code
func (o *GetRunArtifactsTreeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run artifacts tree forbidden response has a 4xx status code
func (o *GetRunArtifactsTreeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get run artifacts tree forbidden response has a 5xx status code
func (o *GetRunArtifactsTreeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get run artifacts tree forbidden response a status code equal to that given
func (o *GetRunArtifactsTreeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get run artifacts tree forbidden response
func (o *GetRunArtifactsTreeForbidden) Code() int {
	return 403
}

func (o *GetRunArtifactsTreeForbidden) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeForbidden  %+v", 403, o.Payload)
}

func (o *GetRunArtifactsTreeForbidden) String() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeForbidden  %+v", 403, o.Payload)
}

func (o *GetRunArtifactsTreeForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunArtifactsTreeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsTreeNotFound creates a GetRunArtifactsTreeNotFound with default headers values
func NewGetRunArtifactsTreeNotFound() *GetRunArtifactsTreeNotFound {
	return &GetRunArtifactsTreeNotFound{}
}

/*
GetRunArtifactsTreeNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetRunArtifactsTreeNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get run artifacts tree not found response has a 2xx status code
func (o *GetRunArtifactsTreeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get run artifacts tree not found response has a 3xx status code
func (o *GetRunArtifactsTreeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run artifacts tree not found response has a 4xx status code
func (o *GetRunArtifactsTreeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get run artifacts tree not found response has a 5xx status code
func (o *GetRunArtifactsTreeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get run artifacts tree not found response a status code equal to that given
func (o *GetRunArtifactsTreeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get run artifacts tree not found response
func (o *GetRunArtifactsTreeNotFound) Code() int {
	return 404
}

func (o *GetRunArtifactsTreeNotFound) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeNotFound  %+v", 404, o.Payload)
}

func (o *GetRunArtifactsTreeNotFound) String() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] getRunArtifactsTreeNotFound  %+v", 404, o.Payload)
}

func (o *GetRunArtifactsTreeNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunArtifactsTreeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunArtifactsTreeDefault creates a GetRunArtifactsTreeDefault with default headers values
func NewGetRunArtifactsTreeDefault(code int) *GetRunArtifactsTreeDefault {
	return &GetRunArtifactsTreeDefault{
		_statusCode: code,
	}
}

/*
GetRunArtifactsTreeDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetRunArtifactsTreeDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get run artifacts tree default response has a 2xx status code
func (o *GetRunArtifactsTreeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get run artifacts tree default response has a 3xx status code
func (o *GetRunArtifactsTreeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get run artifacts tree default response has a 4xx status code
func (o *GetRunArtifactsTreeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get run artifacts tree default response has a 5xx status code
func (o *GetRunArtifactsTreeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get run artifacts tree default response a status code equal to that given
func (o *GetRunArtifactsTreeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get run artifacts tree default response
func (o *GetRunArtifactsTreeDefault) Code() int {
	return o._statusCode
}

func (o *GetRunArtifactsTreeDefault) Error() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] GetRunArtifactsTree default  %+v", o._statusCode, o.Payload)
}

func (o *GetRunArtifactsTreeDefault) String() string {
	return fmt.Sprintf("[GET /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree][%d] GetRunArtifactsTree default  %+v", o._statusCode, o.Payload)
}

func (o *GetRunArtifactsTreeDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetRunArtifactsTreeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
