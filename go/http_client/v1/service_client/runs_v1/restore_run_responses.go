// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/go/http_client/v1/service_model"
)

// RestoreRunReader is a Reader for the RestoreRun structure.
type RestoreRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRestoreRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRestoreRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRestoreRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRestoreRunOK creates a RestoreRunOK with default headers values
func NewRestoreRunOK() *RestoreRunOK {
	return &RestoreRunOK{}
}

/*
RestoreRunOK describes a response with status code 200, with default header values.

A successful response.
*/
type RestoreRunOK struct {
}

// IsSuccess returns true when this restore run o k response has a 2xx status code
func (o *RestoreRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore run o k response has a 3xx status code
func (o *RestoreRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore run o k response has a 4xx status code
func (o *RestoreRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore run o k response has a 5xx status code
func (o *RestoreRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore run o k response a status code equal to that given
func (o *RestoreRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restore run o k response
func (o *RestoreRunOK) Code() int {
	return 200
}

func (o *RestoreRunOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunOK ", 200)
}

func (o *RestoreRunOK) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunOK ", 200)
}

func (o *RestoreRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreRunNoContent creates a RestoreRunNoContent with default headers values
func NewRestoreRunNoContent() *RestoreRunNoContent {
	return &RestoreRunNoContent{}
}

/*
RestoreRunNoContent describes a response with status code 204, with default header values.

No content.
*/
type RestoreRunNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this restore run no content response has a 2xx status code
func (o *RestoreRunNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore run no content response has a 3xx status code
func (o *RestoreRunNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore run no content response has a 4xx status code
func (o *RestoreRunNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore run no content response has a 5xx status code
func (o *RestoreRunNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restore run no content response a status code equal to that given
func (o *RestoreRunNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the restore run no content response
func (o *RestoreRunNoContent) Code() int {
	return 204
}

func (o *RestoreRunNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunNoContent  %+v", 204, o.Payload)
}

func (o *RestoreRunNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunNoContent  %+v", 204, o.Payload)
}

func (o *RestoreRunNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRunForbidden creates a RestoreRunForbidden with default headers values
func NewRestoreRunForbidden() *RestoreRunForbidden {
	return &RestoreRunForbidden{}
}

/*
RestoreRunForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type RestoreRunForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this restore run forbidden response has a 2xx status code
func (o *RestoreRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore run forbidden response has a 3xx status code
func (o *RestoreRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore run forbidden response has a 4xx status code
func (o *RestoreRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore run forbidden response has a 5xx status code
func (o *RestoreRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore run forbidden response a status code equal to that given
func (o *RestoreRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restore run forbidden response
func (o *RestoreRunForbidden) Code() int {
	return 403
}

func (o *RestoreRunForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunForbidden  %+v", 403, o.Payload)
}

func (o *RestoreRunForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunForbidden  %+v", 403, o.Payload)
}

func (o *RestoreRunForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRunNotFound creates a RestoreRunNotFound with default headers values
func NewRestoreRunNotFound() *RestoreRunNotFound {
	return &RestoreRunNotFound{}
}

/*
RestoreRunNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type RestoreRunNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this restore run not found response has a 2xx status code
func (o *RestoreRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore run not found response has a 3xx status code
func (o *RestoreRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore run not found response has a 4xx status code
func (o *RestoreRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore run not found response has a 5xx status code
func (o *RestoreRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore run not found response a status code equal to that given
func (o *RestoreRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restore run not found response
func (o *RestoreRunNotFound) Code() int {
	return 404
}

func (o *RestoreRunNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunNotFound  %+v", 404, o.Payload)
}

func (o *RestoreRunNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] restoreRunNotFound  %+v", 404, o.Payload)
}

func (o *RestoreRunNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRunDefault creates a RestoreRunDefault with default headers values
func NewRestoreRunDefault(code int) *RestoreRunDefault {
	return &RestoreRunDefault{
		_statusCode: code,
	}
}

/*
RestoreRunDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type RestoreRunDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this restore run default response has a 2xx status code
func (o *RestoreRunDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this restore run default response has a 3xx status code
func (o *RestoreRunDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this restore run default response has a 4xx status code
func (o *RestoreRunDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this restore run default response has a 5xx status code
func (o *RestoreRunDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this restore run default response a status code equal to that given
func (o *RestoreRunDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the restore run default response
func (o *RestoreRunDefault) Code() int {
	return o._statusCode
}

func (o *RestoreRunDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] RestoreRun default  %+v", o._statusCode, o.Payload)
}

func (o *RestoreRunDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{entity}/runs/{uuid}/restore][%d] RestoreRun default  %+v", o._statusCode, o.Payload)
}

func (o *RestoreRunDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RestoreRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
