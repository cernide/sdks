// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/go/http_client/v1/service_model"
)

// RestartRunReader is a Reader for the RestartRun structure.
type RestartRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestartRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRestartRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRestartRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestartRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRestartRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRestartRunOK creates a RestartRunOK with default headers values
func NewRestartRunOK() *RestartRunOK {
	return &RestartRunOK{}
}

/*
RestartRunOK describes a response with status code 200, with default header values.

A successful response.
*/
type RestartRunOK struct {
	Payload *service_model.V1Run
}

// IsSuccess returns true when this restart run o k response has a 2xx status code
func (o *RestartRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restart run o k response has a 3xx status code
func (o *RestartRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart run o k response has a 4xx status code
func (o *RestartRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart run o k response has a 5xx status code
func (o *RestartRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restart run o k response a status code equal to that given
func (o *RestartRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restart run o k response
func (o *RestartRunOK) Code() int {
	return 200
}

func (o *RestartRunOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunOK  %+v", 200, o.Payload)
}

func (o *RestartRunOK) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunOK  %+v", 200, o.Payload)
}

func (o *RestartRunOK) GetPayload() *service_model.V1Run {
	return o.Payload
}

func (o *RestartRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartRunNoContent creates a RestartRunNoContent with default headers values
func NewRestartRunNoContent() *RestartRunNoContent {
	return &RestartRunNoContent{}
}

/*
RestartRunNoContent describes a response with status code 204, with default header values.

No content.
*/
type RestartRunNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this restart run no content response has a 2xx status code
func (o *RestartRunNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restart run no content response has a 3xx status code
func (o *RestartRunNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart run no content response has a 4xx status code
func (o *RestartRunNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart run no content response has a 5xx status code
func (o *RestartRunNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restart run no content response a status code equal to that given
func (o *RestartRunNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the restart run no content response
func (o *RestartRunNoContent) Code() int {
	return 204
}

func (o *RestartRunNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunNoContent  %+v", 204, o.Payload)
}

func (o *RestartRunNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunNoContent  %+v", 204, o.Payload)
}

func (o *RestartRunNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RestartRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartRunForbidden creates a RestartRunForbidden with default headers values
func NewRestartRunForbidden() *RestartRunForbidden {
	return &RestartRunForbidden{}
}

/*
RestartRunForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type RestartRunForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this restart run forbidden response has a 2xx status code
func (o *RestartRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart run forbidden response has a 3xx status code
func (o *RestartRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart run forbidden response has a 4xx status code
func (o *RestartRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart run forbidden response has a 5xx status code
func (o *RestartRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restart run forbidden response a status code equal to that given
func (o *RestartRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restart run forbidden response
func (o *RestartRunForbidden) Code() int {
	return 403
}

func (o *RestartRunForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunForbidden  %+v", 403, o.Payload)
}

func (o *RestartRunForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunForbidden  %+v", 403, o.Payload)
}

func (o *RestartRunForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RestartRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartRunNotFound creates a RestartRunNotFound with default headers values
func NewRestartRunNotFound() *RestartRunNotFound {
	return &RestartRunNotFound{}
}

/*
RestartRunNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type RestartRunNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this restart run not found response has a 2xx status code
func (o *RestartRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart run not found response has a 3xx status code
func (o *RestartRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart run not found response has a 4xx status code
func (o *RestartRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart run not found response has a 5xx status code
func (o *RestartRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restart run not found response a status code equal to that given
func (o *RestartRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restart run not found response
func (o *RestartRunNotFound) Code() int {
	return 404
}

func (o *RestartRunNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunNotFound  %+v", 404, o.Payload)
}

func (o *RestartRunNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] restartRunNotFound  %+v", 404, o.Payload)
}

func (o *RestartRunNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RestartRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartRunDefault creates a RestartRunDefault with default headers values
func NewRestartRunDefault(code int) *RestartRunDefault {
	return &RestartRunDefault{
		_statusCode: code,
	}
}

/*
RestartRunDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type RestartRunDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this restart run default response has a 2xx status code
func (o *RestartRunDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this restart run default response has a 3xx status code
func (o *RestartRunDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this restart run default response has a 4xx status code
func (o *RestartRunDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this restart run default response has a 5xx status code
func (o *RestartRunDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this restart run default response a status code equal to that given
func (o *RestartRunDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the restart run default response
func (o *RestartRunDefault) Code() int {
	return o._statusCode
}

func (o *RestartRunDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] RestartRun default  %+v", o._statusCode, o.Payload)
}

func (o *RestartRunDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs/{run.uuid}/restart][%d] RestartRun default  %+v", o._statusCode, o.Payload)
}

func (o *RestartRunDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RestartRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
