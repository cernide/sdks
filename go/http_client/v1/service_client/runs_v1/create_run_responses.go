// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/v2/go/http_client/v1/service_model"
)

// CreateRunReader is a Reader for the CreateRun structure.
type CreateRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCreateRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateRunOK creates a CreateRunOK with default headers values
func NewCreateRunOK() *CreateRunOK {
	return &CreateRunOK{}
}

/*
CreateRunOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateRunOK struct {
	Payload *service_model.V1Run
}

// IsSuccess returns true when this create run o k response has a 2xx status code
func (o *CreateRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create run o k response has a 3xx status code
func (o *CreateRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create run o k response has a 4xx status code
func (o *CreateRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create run o k response has a 5xx status code
func (o *CreateRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create run o k response a status code equal to that given
func (o *CreateRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create run o k response
func (o *CreateRunOK) Code() int {
	return 200
}

func (o *CreateRunOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunOK  %+v", 200, o.Payload)
}

func (o *CreateRunOK) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunOK  %+v", 200, o.Payload)
}

func (o *CreateRunOK) GetPayload() *service_model.V1Run {
	return o.Payload
}

func (o *CreateRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunNoContent creates a CreateRunNoContent with default headers values
func NewCreateRunNoContent() *CreateRunNoContent {
	return &CreateRunNoContent{}
}

/*
CreateRunNoContent describes a response with status code 204, with default header values.

No content.
*/
type CreateRunNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this create run no content response has a 2xx status code
func (o *CreateRunNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create run no content response has a 3xx status code
func (o *CreateRunNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create run no content response has a 4xx status code
func (o *CreateRunNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this create run no content response has a 5xx status code
func (o *CreateRunNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this create run no content response a status code equal to that given
func (o *CreateRunNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the create run no content response
func (o *CreateRunNoContent) Code() int {
	return 204
}

func (o *CreateRunNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunNoContent  %+v", 204, o.Payload)
}

func (o *CreateRunNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunNoContent  %+v", 204, o.Payload)
}

func (o *CreateRunNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunForbidden creates a CreateRunForbidden with default headers values
func NewCreateRunForbidden() *CreateRunForbidden {
	return &CreateRunForbidden{}
}

/*
CreateRunForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type CreateRunForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this create run forbidden response has a 2xx status code
func (o *CreateRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create run forbidden response has a 3xx status code
func (o *CreateRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create run forbidden response has a 4xx status code
func (o *CreateRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create run forbidden response has a 5xx status code
func (o *CreateRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create run forbidden response a status code equal to that given
func (o *CreateRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create run forbidden response
func (o *CreateRunForbidden) Code() int {
	return 403
}

func (o *CreateRunForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunForbidden  %+v", 403, o.Payload)
}

func (o *CreateRunForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunForbidden  %+v", 403, o.Payload)
}

func (o *CreateRunForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunNotFound creates a CreateRunNotFound with default headers values
func NewCreateRunNotFound() *CreateRunNotFound {
	return &CreateRunNotFound{}
}

/*
CreateRunNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type CreateRunNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this create run not found response has a 2xx status code
func (o *CreateRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create run not found response has a 3xx status code
func (o *CreateRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create run not found response has a 4xx status code
func (o *CreateRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create run not found response has a 5xx status code
func (o *CreateRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create run not found response a status code equal to that given
func (o *CreateRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create run not found response
func (o *CreateRunNotFound) Code() int {
	return 404
}

func (o *CreateRunNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunNotFound  %+v", 404, o.Payload)
}

func (o *CreateRunNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] createRunNotFound  %+v", 404, o.Payload)
}

func (o *CreateRunNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunDefault creates a CreateRunDefault with default headers values
func NewCreateRunDefault(code int) *CreateRunDefault {
	return &CreateRunDefault{
		_statusCode: code,
	}
}

/*
CreateRunDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateRunDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this create run default response has a 2xx status code
func (o *CreateRunDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create run default response has a 3xx status code
func (o *CreateRunDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create run default response has a 4xx status code
func (o *CreateRunDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create run default response has a 5xx status code
func (o *CreateRunDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create run default response a status code equal to that given
func (o *CreateRunDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create run default response
func (o *CreateRunDefault) Code() int {
	return o._statusCode
}

func (o *CreateRunDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] CreateRun default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRunDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/runs][%d] CreateRun default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRunDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *CreateRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
