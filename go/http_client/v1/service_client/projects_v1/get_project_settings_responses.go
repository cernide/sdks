// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetProjectSettingsReader is a Reader for the GetProjectSettings structure.
type GetProjectSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetProjectSettingsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetProjectSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetProjectSettingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetProjectSettingsOK creates a GetProjectSettingsOK with default headers values
func NewGetProjectSettingsOK() *GetProjectSettingsOK {
	return &GetProjectSettingsOK{}
}

/* GetProjectSettingsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetProjectSettingsOK struct {
	Payload *service_model.V1ProjectSettings
}

func (o *GetProjectSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsOK  %+v", 200, o.Payload)
}
func (o *GetProjectSettingsOK) GetPayload() *service_model.V1ProjectSettings {
	return o.Payload
}

func (o *GetProjectSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ProjectSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsNoContent creates a GetProjectSettingsNoContent with default headers values
func NewGetProjectSettingsNoContent() *GetProjectSettingsNoContent {
	return &GetProjectSettingsNoContent{}
}

/* GetProjectSettingsNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetProjectSettingsNoContent struct {
	Payload interface{}
}

func (o *GetProjectSettingsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsNoContent  %+v", 204, o.Payload)
}
func (o *GetProjectSettingsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetProjectSettingsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsForbidden creates a GetProjectSettingsForbidden with default headers values
func NewGetProjectSettingsForbidden() *GetProjectSettingsForbidden {
	return &GetProjectSettingsForbidden{}
}

/* GetProjectSettingsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetProjectSettingsForbidden struct {
	Payload interface{}
}

func (o *GetProjectSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsForbidden  %+v", 403, o.Payload)
}
func (o *GetProjectSettingsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetProjectSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsNotFound creates a GetProjectSettingsNotFound with default headers values
func NewGetProjectSettingsNotFound() *GetProjectSettingsNotFound {
	return &GetProjectSettingsNotFound{}
}

/* GetProjectSettingsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetProjectSettingsNotFound struct {
	Payload interface{}
}

func (o *GetProjectSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsNotFound  %+v", 404, o.Payload)
}
func (o *GetProjectSettingsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetProjectSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsDefault creates a GetProjectSettingsDefault with default headers values
func NewGetProjectSettingsDefault(code int) *GetProjectSettingsDefault {
	return &GetProjectSettingsDefault{
		_statusCode: code,
	}
}

/* GetProjectSettingsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetProjectSettingsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the get project settings default response
func (o *GetProjectSettingsDefault) Code() int {
	return o._statusCode
}

func (o *GetProjectSettingsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] GetProjectSettings default  %+v", o._statusCode, o.Payload)
}
func (o *GetProjectSettingsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetProjectSettingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
