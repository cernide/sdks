// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cernide/sdks/v2/go/http_client/v1/service_model"
)

// GetProjectSettingsReader is a Reader for the GetProjectSettings structure.
type GetProjectSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetProjectSettingsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetProjectSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetProjectSettingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetProjectSettingsOK creates a GetProjectSettingsOK with default headers values
func NewGetProjectSettingsOK() *GetProjectSettingsOK {
	return &GetProjectSettingsOK{}
}

/*
GetProjectSettingsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetProjectSettingsOK struct {
	Payload *service_model.V1ProjectSettings
}

// IsSuccess returns true when this get project settings o k response has a 2xx status code
func (o *GetProjectSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project settings o k response has a 3xx status code
func (o *GetProjectSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project settings o k response has a 4xx status code
func (o *GetProjectSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project settings o k response has a 5xx status code
func (o *GetProjectSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get project settings o k response a status code equal to that given
func (o *GetProjectSettingsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get project settings o k response
func (o *GetProjectSettingsOK) Code() int {
	return 200
}

func (o *GetProjectSettingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsOK  %+v", 200, o.Payload)
}

func (o *GetProjectSettingsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsOK  %+v", 200, o.Payload)
}

func (o *GetProjectSettingsOK) GetPayload() *service_model.V1ProjectSettings {
	return o.Payload
}

func (o *GetProjectSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ProjectSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsNoContent creates a GetProjectSettingsNoContent with default headers values
func NewGetProjectSettingsNoContent() *GetProjectSettingsNoContent {
	return &GetProjectSettingsNoContent{}
}

/*
GetProjectSettingsNoContent describes a response with status code 204, with default header values.

No content.
*/
type GetProjectSettingsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this get project settings no content response has a 2xx status code
func (o *GetProjectSettingsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project settings no content response has a 3xx status code
func (o *GetProjectSettingsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project settings no content response has a 4xx status code
func (o *GetProjectSettingsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project settings no content response has a 5xx status code
func (o *GetProjectSettingsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get project settings no content response a status code equal to that given
func (o *GetProjectSettingsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get project settings no content response
func (o *GetProjectSettingsNoContent) Code() int {
	return 204
}

func (o *GetProjectSettingsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsNoContent  %+v", 204, o.Payload)
}

func (o *GetProjectSettingsNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsNoContent  %+v", 204, o.Payload)
}

func (o *GetProjectSettingsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetProjectSettingsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsForbidden creates a GetProjectSettingsForbidden with default headers values
func NewGetProjectSettingsForbidden() *GetProjectSettingsForbidden {
	return &GetProjectSettingsForbidden{}
}

/*
GetProjectSettingsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type GetProjectSettingsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this get project settings forbidden response has a 2xx status code
func (o *GetProjectSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project settings forbidden response has a 3xx status code
func (o *GetProjectSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project settings forbidden response has a 4xx status code
func (o *GetProjectSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project settings forbidden response has a 5xx status code
func (o *GetProjectSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get project settings forbidden response a status code equal to that given
func (o *GetProjectSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get project settings forbidden response
func (o *GetProjectSettingsForbidden) Code() int {
	return 403
}

func (o *GetProjectSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetProjectSettingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetProjectSettingsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetProjectSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsNotFound creates a GetProjectSettingsNotFound with default headers values
func NewGetProjectSettingsNotFound() *GetProjectSettingsNotFound {
	return &GetProjectSettingsNotFound{}
}

/*
GetProjectSettingsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type GetProjectSettingsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get project settings not found response has a 2xx status code
func (o *GetProjectSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project settings not found response has a 3xx status code
func (o *GetProjectSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project settings not found response has a 4xx status code
func (o *GetProjectSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project settings not found response has a 5xx status code
func (o *GetProjectSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get project settings not found response a status code equal to that given
func (o *GetProjectSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get project settings not found response
func (o *GetProjectSettingsNotFound) Code() int {
	return 404
}

func (o *GetProjectSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetProjectSettingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] getProjectSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetProjectSettingsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetProjectSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectSettingsDefault creates a GetProjectSettingsDefault with default headers values
func NewGetProjectSettingsDefault(code int) *GetProjectSettingsDefault {
	return &GetProjectSettingsDefault{
		_statusCode: code,
	}
}

/*
GetProjectSettingsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetProjectSettingsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this get project settings default response has a 2xx status code
func (o *GetProjectSettingsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get project settings default response has a 3xx status code
func (o *GetProjectSettingsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get project settings default response has a 4xx status code
func (o *GetProjectSettingsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get project settings default response has a 5xx status code
func (o *GetProjectSettingsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get project settings default response a status code equal to that given
func (o *GetProjectSettingsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get project settings default response
func (o *GetProjectSettingsDefault) Code() int {
	return o._statusCode
}

func (o *GetProjectSettingsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] GetProjectSettings default  %+v", o._statusCode, o.Payload)
}

func (o *GetProjectSettingsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{name}/settings][%d] GetProjectSettings default  %+v", o._statusCode, o.Payload)
}

func (o *GetProjectSettingsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetProjectSettingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
