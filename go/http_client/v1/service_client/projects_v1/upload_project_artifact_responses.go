// Copyright 2018-2023 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UploadProjectArtifactReader is a Reader for the UploadProjectArtifact structure.
type UploadProjectArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadProjectArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadProjectArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUploadProjectArtifactNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUploadProjectArtifactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadProjectArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadProjectArtifactOK creates a UploadProjectArtifactOK with default headers values
func NewUploadProjectArtifactOK() *UploadProjectArtifactOK {
	return &UploadProjectArtifactOK{}
}

/*
UploadProjectArtifactOK describes a response with status code 200, with default header values.

A successful response.
*/
type UploadProjectArtifactOK struct {
}

// IsSuccess returns true when this upload project artifact o k response has a 2xx status code
func (o *UploadProjectArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload project artifact o k response has a 3xx status code
func (o *UploadProjectArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload project artifact o k response has a 4xx status code
func (o *UploadProjectArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload project artifact o k response has a 5xx status code
func (o *UploadProjectArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upload project artifact o k response a status code equal to that given
func (o *UploadProjectArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upload project artifact o k response
func (o *UploadProjectArtifactOK) Code() int {
	return 200
}

func (o *UploadProjectArtifactOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactOK ", 200)
}

func (o *UploadProjectArtifactOK) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactOK ", 200)
}

func (o *UploadProjectArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadProjectArtifactNoContent creates a UploadProjectArtifactNoContent with default headers values
func NewUploadProjectArtifactNoContent() *UploadProjectArtifactNoContent {
	return &UploadProjectArtifactNoContent{}
}

/*
UploadProjectArtifactNoContent describes a response with status code 204, with default header values.

No content.
*/
type UploadProjectArtifactNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this upload project artifact no content response has a 2xx status code
func (o *UploadProjectArtifactNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload project artifact no content response has a 3xx status code
func (o *UploadProjectArtifactNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload project artifact no content response has a 4xx status code
func (o *UploadProjectArtifactNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload project artifact no content response has a 5xx status code
func (o *UploadProjectArtifactNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this upload project artifact no content response a status code equal to that given
func (o *UploadProjectArtifactNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the upload project artifact no content response
func (o *UploadProjectArtifactNoContent) Code() int {
	return 204
}

func (o *UploadProjectArtifactNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactNoContent  %+v", 204, o.Payload)
}

func (o *UploadProjectArtifactNoContent) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactNoContent  %+v", 204, o.Payload)
}

func (o *UploadProjectArtifactNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UploadProjectArtifactNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadProjectArtifactForbidden creates a UploadProjectArtifactForbidden with default headers values
func NewUploadProjectArtifactForbidden() *UploadProjectArtifactForbidden {
	return &UploadProjectArtifactForbidden{}
}

/*
UploadProjectArtifactForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type UploadProjectArtifactForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this upload project artifact forbidden response has a 2xx status code
func (o *UploadProjectArtifactForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload project artifact forbidden response has a 3xx status code
func (o *UploadProjectArtifactForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload project artifact forbidden response has a 4xx status code
func (o *UploadProjectArtifactForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload project artifact forbidden response has a 5xx status code
func (o *UploadProjectArtifactForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this upload project artifact forbidden response a status code equal to that given
func (o *UploadProjectArtifactForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the upload project artifact forbidden response
func (o *UploadProjectArtifactForbidden) Code() int {
	return 403
}

func (o *UploadProjectArtifactForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactForbidden  %+v", 403, o.Payload)
}

func (o *UploadProjectArtifactForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactForbidden  %+v", 403, o.Payload)
}

func (o *UploadProjectArtifactForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UploadProjectArtifactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadProjectArtifactNotFound creates a UploadProjectArtifactNotFound with default headers values
func NewUploadProjectArtifactNotFound() *UploadProjectArtifactNotFound {
	return &UploadProjectArtifactNotFound{}
}

/*
UploadProjectArtifactNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type UploadProjectArtifactNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this upload project artifact not found response has a 2xx status code
func (o *UploadProjectArtifactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload project artifact not found response has a 3xx status code
func (o *UploadProjectArtifactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload project artifact not found response has a 4xx status code
func (o *UploadProjectArtifactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload project artifact not found response has a 5xx status code
func (o *UploadProjectArtifactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this upload project artifact not found response a status code equal to that given
func (o *UploadProjectArtifactNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the upload project artifact not found response
func (o *UploadProjectArtifactNotFound) Code() int {
	return 404
}

func (o *UploadProjectArtifactNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactNotFound  %+v", 404, o.Payload)
}

func (o *UploadProjectArtifactNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/artifacts/{uuid}/upload][%d] uploadProjectArtifactNotFound  %+v", 404, o.Payload)
}

func (o *UploadProjectArtifactNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UploadProjectArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
