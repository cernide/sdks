// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListProjectsReader is a Reader for the ListProjects structure.
type ListProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListProjectsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListProjectsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListProjectsOK creates a ListProjectsOK with default headers values
func NewListProjectsOK() *ListProjectsOK {
	return &ListProjectsOK{}
}

/*
ListProjectsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListProjectsOK struct {
	Payload *service_model.V1ListProjectsResponse
}

// IsSuccess returns true when this list projects o k response has a 2xx status code
func (o *ListProjectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list projects o k response has a 3xx status code
func (o *ListProjectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list projects o k response has a 4xx status code
func (o *ListProjectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list projects o k response has a 5xx status code
func (o *ListProjectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list projects o k response a status code equal to that given
func (o *ListProjectsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list projects o k response
func (o *ListProjectsOK) Code() int {
	return 200
}

func (o *ListProjectsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsOK  %+v", 200, o.Payload)
}

func (o *ListProjectsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsOK  %+v", 200, o.Payload)
}

func (o *ListProjectsOK) GetPayload() *service_model.V1ListProjectsResponse {
	return o.Payload
}

func (o *ListProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListProjectsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectsNoContent creates a ListProjectsNoContent with default headers values
func NewListProjectsNoContent() *ListProjectsNoContent {
	return &ListProjectsNoContent{}
}

/*
ListProjectsNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListProjectsNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this list projects no content response has a 2xx status code
func (o *ListProjectsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list projects no content response has a 3xx status code
func (o *ListProjectsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list projects no content response has a 4xx status code
func (o *ListProjectsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this list projects no content response has a 5xx status code
func (o *ListProjectsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this list projects no content response a status code equal to that given
func (o *ListProjectsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the list projects no content response
func (o *ListProjectsNoContent) Code() int {
	return 204
}

func (o *ListProjectsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsNoContent  %+v", 204, o.Payload)
}

func (o *ListProjectsNoContent) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsNoContent  %+v", 204, o.Payload)
}

func (o *ListProjectsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListProjectsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectsForbidden creates a ListProjectsForbidden with default headers values
func NewListProjectsForbidden() *ListProjectsForbidden {
	return &ListProjectsForbidden{}
}

/*
ListProjectsForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListProjectsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this list projects forbidden response has a 2xx status code
func (o *ListProjectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list projects forbidden response has a 3xx status code
func (o *ListProjectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list projects forbidden response has a 4xx status code
func (o *ListProjectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list projects forbidden response has a 5xx status code
func (o *ListProjectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list projects forbidden response a status code equal to that given
func (o *ListProjectsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list projects forbidden response
func (o *ListProjectsForbidden) Code() int {
	return 403
}

func (o *ListProjectsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsForbidden  %+v", 403, o.Payload)
}

func (o *ListProjectsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsForbidden  %+v", 403, o.Payload)
}

func (o *ListProjectsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectsNotFound creates a ListProjectsNotFound with default headers values
func NewListProjectsNotFound() *ListProjectsNotFound {
	return &ListProjectsNotFound{}
}

/*
ListProjectsNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListProjectsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this list projects not found response has a 2xx status code
func (o *ListProjectsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list projects not found response has a 3xx status code
func (o *ListProjectsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list projects not found response has a 4xx status code
func (o *ListProjectsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list projects not found response has a 5xx status code
func (o *ListProjectsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list projects not found response a status code equal to that given
func (o *ListProjectsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list projects not found response
func (o *ListProjectsNotFound) Code() int {
	return 404
}

func (o *ListProjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsNotFound  %+v", 404, o.Payload)
}

func (o *ListProjectsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] listProjectsNotFound  %+v", 404, o.Payload)
}

func (o *ListProjectsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectsDefault creates a ListProjectsDefault with default headers values
func NewListProjectsDefault(code int) *ListProjectsDefault {
	return &ListProjectsDefault{
		_statusCode: code,
	}
}

/*
ListProjectsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListProjectsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// IsSuccess returns true when this list projects default response has a 2xx status code
func (o *ListProjectsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list projects default response has a 3xx status code
func (o *ListProjectsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list projects default response has a 4xx status code
func (o *ListProjectsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list projects default response has a 5xx status code
func (o *ListProjectsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list projects default response a status code equal to that given
func (o *ListProjectsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list projects default response
func (o *ListProjectsDefault) Code() int {
	return o._statusCode
}

func (o *ListProjectsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] ListProjects default  %+v", o._statusCode, o.Payload)
}

func (o *ListProjectsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] ListProjects default  %+v", o._statusCode, o.Payload)
}

func (o *ListProjectsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListProjectsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
