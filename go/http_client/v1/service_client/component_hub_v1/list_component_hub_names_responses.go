// Copyright 2018-2021 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package component_hub_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListComponentHubNamesReader is a Reader for the ListComponentHubNames structure.
type ListComponentHubNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListComponentHubNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListComponentHubNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListComponentHubNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListComponentHubNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListComponentHubNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListComponentHubNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListComponentHubNamesOK creates a ListComponentHubNamesOK with default headers values
func NewListComponentHubNamesOK() *ListComponentHubNamesOK {
	return &ListComponentHubNamesOK{}
}

/* ListComponentHubNamesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListComponentHubNamesOK struct {
	Payload *service_model.V1ListComponentHubsResponse
}

func (o *ListComponentHubNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/hub/names][%d] listComponentHubNamesOK  %+v", 200, o.Payload)
}
func (o *ListComponentHubNamesOK) GetPayload() *service_model.V1ListComponentHubsResponse {
	return o.Payload
}

func (o *ListComponentHubNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListComponentHubsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListComponentHubNamesNoContent creates a ListComponentHubNamesNoContent with default headers values
func NewListComponentHubNamesNoContent() *ListComponentHubNamesNoContent {
	return &ListComponentHubNamesNoContent{}
}

/* ListComponentHubNamesNoContent describes a response with status code 204, with default header values.

No content.
*/
type ListComponentHubNamesNoContent struct {
	Payload interface{}
}

func (o *ListComponentHubNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/hub/names][%d] listComponentHubNamesNoContent  %+v", 204, o.Payload)
}
func (o *ListComponentHubNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListComponentHubNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListComponentHubNamesForbidden creates a ListComponentHubNamesForbidden with default headers values
func NewListComponentHubNamesForbidden() *ListComponentHubNamesForbidden {
	return &ListComponentHubNamesForbidden{}
}

/* ListComponentHubNamesForbidden describes a response with status code 403, with default header values.

You don't have permission to access the resource.
*/
type ListComponentHubNamesForbidden struct {
	Payload interface{}
}

func (o *ListComponentHubNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/hub/names][%d] listComponentHubNamesForbidden  %+v", 403, o.Payload)
}
func (o *ListComponentHubNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListComponentHubNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListComponentHubNamesNotFound creates a ListComponentHubNamesNotFound with default headers values
func NewListComponentHubNamesNotFound() *ListComponentHubNamesNotFound {
	return &ListComponentHubNamesNotFound{}
}

/* ListComponentHubNamesNotFound describes a response with status code 404, with default header values.

Resource does not exist.
*/
type ListComponentHubNamesNotFound struct {
	Payload interface{}
}

func (o *ListComponentHubNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/hub/names][%d] listComponentHubNamesNotFound  %+v", 404, o.Payload)
}
func (o *ListComponentHubNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListComponentHubNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListComponentHubNamesDefault creates a ListComponentHubNamesDefault with default headers values
func NewListComponentHubNamesDefault(code int) *ListComponentHubNamesDefault {
	return &ListComponentHubNamesDefault{
		_statusCode: code,
	}
}

/* ListComponentHubNamesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListComponentHubNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list component hub names default response
func (o *ListComponentHubNamesDefault) Code() int {
	return o._statusCode
}

func (o *ListComponentHubNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/hub/names][%d] ListComponentHubNames default  %+v", o._statusCode, o.Payload)
}
func (o *ListComponentHubNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListComponentHubNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
