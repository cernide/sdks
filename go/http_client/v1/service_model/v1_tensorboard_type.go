// Code generated by go-swagger; DO NOT EDIT.

package service_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1TensorboardType Tensorboard type specification
//
// swagger:model v1TensorboardType
type V1TensorboardType struct {

	// An optional path prefix to use for exposing the service
	PathPrefix string `json:"path_prefix,omitempty"`

	// An optional comma separated list of plugins to install before starting the tensorboard service
	Plugins string `json:"plugins,omitempty"`

	// Port to expose the tensorboard service
	Port int32 `json:"port,omitempty"`

	// A flag to initialize the paths under the operation's names
	UseNames bool `json:"use_names,omitempty"`

	// A comma separated list of operation's uuids to load the tensorboard logs from
	Uuids []string `json:"uuids"`
}

// Validate validates this v1 tensorboard type
func (m *V1TensorboardType) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 tensorboard type based on context it is used
func (m *V1TensorboardType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1TensorboardType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1TensorboardType) UnmarshalBinary(b []byte) error {
	var res V1TensorboardType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
