// Code generated by go-swagger; DO NOT EDIT.

package service_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1MatrixKind v1 matrix kind
//
// swagger:model v1MatrixKind
type V1MatrixKind string

func NewV1MatrixKind(value V1MatrixKind) *V1MatrixKind {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1MatrixKind.
func (m V1MatrixKind) Pointer() *V1MatrixKind {
	return &m
}

const (

	// V1MatrixKindRandom captures enum value "random"
	V1MatrixKindRandom V1MatrixKind = "random"

	// V1MatrixKindGrid captures enum value "grid"
	V1MatrixKindGrid V1MatrixKind = "grid"

	// V1MatrixKindHyperband captures enum value "hyperband"
	V1MatrixKindHyperband V1MatrixKind = "hyperband"

	// V1MatrixKindBayes captures enum value "bayes"
	V1MatrixKindBayes V1MatrixKind = "bayes"

	// V1MatrixKindHyperopt captures enum value "hyperopt"
	V1MatrixKindHyperopt V1MatrixKind = "hyperopt"

	// V1MatrixKindIterative captures enum value "iterative"
	V1MatrixKindIterative V1MatrixKind = "iterative"

	// V1MatrixKindMapping captures enum value "mapping"
	V1MatrixKindMapping V1MatrixKind = "mapping"
)

// for schema
var v1MatrixKindEnum []interface{}

func init() {
	var res []V1MatrixKind
	if err := json.Unmarshal([]byte(`["random","grid","hyperband","bayes","hyperopt","iterative","mapping"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1MatrixKindEnum = append(v1MatrixKindEnum, v)
	}
}

func (m V1MatrixKind) validateV1MatrixKindEnum(path, location string, value V1MatrixKind) error {
	if err := validate.EnumCase(path, location, value, v1MatrixKindEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 matrix kind
func (m V1MatrixKind) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1MatrixKindEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 matrix kind based on context it is used
func (m V1MatrixKind) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
